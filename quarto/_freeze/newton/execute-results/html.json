{
  "hash": "daec0bca2d82e5b71877ce07656dd1c3",
  "result": {
    "markdown": "# Newton's method using julia\n\n\n\n<br/>\nA notebook for this material:\n[ipynb](https://raw.githubusercontent.com/mth229/229-projects/master/09-extrema.ipynb)\n[(Pluto html)](./229-projects/09-extrema.html)\n[(With commentary)](./229-projects/09-extrema-pluto-commentary.html)\n\n## Introduction\n\n\nNewton's method is an old method for *approximating* a zero of a function, $f(x)$:\n\n\n\n$$\nf(x) = 0\n$$\n\n\nPreviously we discussed the *bisection method* which applied for some continuous function $f(x)$ which changed signs between $a$ and $b$, points which bracket a zero. Not only did we need to find these bracketing points ‚Äì which wasn't hard from a graph, more importantly the actual algorithm is pretty slow.\n\n\nIf the function $f$ is sufficiently differentiable, then Newton's method may work to find a zero.  Unlike the bisection method which is slow but guaranteed to find a root by the intermediate value theorem, Newton's method is fast (once it is close) but has no such guarantee of converging. In this project, we'll see how to implement the algorithm, try some examples, and then look at what can go wrong.\n\n\nThe `MTH229` package provides a function `newton` for easily performing Newton's method, utilizing a function from the `Roots` package. More usefully, we will see that `find_zero`, which we used for bisection, can also be used for root finding with an algorithm that is a bit more robust than Newton's method.\n\n\nTo begin, we load `MTH229` and `Plots`. In the background this loads `Roots`:\n\n``` {.julia .cell-code}\nusing MTH229\nusing Plots\n```\n\n\n\n\n## Basic idea\n\n\nThe idea behind Newton's method is simple ‚Äì *linear approximation*. That is, most functions at any given point are well approximated by the tangent line at that point. If we have a good guess $x_n$, then we can improve this guess iteratively by replacing it with the zero, $x_{n+1}$, of the tangent line at $(x_n, f(x_n))$.\n\n\n![Newton, one step](figures/newton/newton-one-step.png)\n\n\nA simple picture shows that we have a triangle with base $x_{n+1} - x_{n}$, rise $0 - f(x_n)$ and slope $f'(x_n)$, using the \"rise over run\" formula:\n\n\n\n$$\nf'(x_n) = \\frac{-f(x_n)}{x_{n+1} - x_{n}}.\n$$\n\n\nThe basic algorithm of Newton's methods solves this to get:\n\n\n\n$$\nx_{n+1} = x_n - \\frac{f(x_n)}{f'(x_n)}.\n$$\n\n\nSome books write the right-hand side as $x_n - f'(x_n)^{-1} f(x_n)$, a form that generalizes to different settings.\n\n\nLike the bisection method, Newton's method is an *iterative method*. One begins with a (suitable) guess $x_0$. From that the algorithm produces $x_1$ which is used to produce $x_2$, etc. The idea is that one eventually will settle on a value $x_n$ sufficiently close to the desired root.\n\n\nMathematically, the indices indicate that the right hand side is computed and assigned to the left hand side. This is exactly what is done in assignment within `julia`, so  the above simply becomes:\n\n``` {.julia .cell-code}\nx = x - f(x)/f'(x)\n```\n\n\nWhere `f(x)` is the function and `f'(x)` its derivative. (In this case found by automatic differentiation.) This line starts with a previously defined value of `x` and updates it accordingly.\n\n\nThe updating is continued ‚Äì by executing the exact same command ‚Äì until either the algorithm has gotten close enough to an answer (i.e., it has converged) or we have given up on it converging.\n\n\nHere is an example to find a zero of the function: $f(x) = x^3 - 2x - 5$.\n\n\nA quick graph shows a root near 2:\n\n::: {.cell execution_count=5}\n``` {.julia .cell-code}\nf(x) = x^3 - 2x - 5\nplot(f, -3, 3)\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n![](newton_files/figure-html/cell-6-output-1.svg){}\n:::\n:::\n\n\nHere we improve the estimate for the root near 2 using Newton's method. We will need the first derivative, which we denote `fp`\n\n::: {.cell execution_count=6}\n``` {.julia .cell-code}\nfp(x) = 3x^2 - 2\nx = 2\t\t\t\t# starting value, x_0\nx = x - f(x)/fp(x)\t\t# new value, x_1\nx, f(x)\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\n(2.1, 0.06100000000000083)\n```\n:::\n:::\n\n\nWe can visualize our progress as follows, noting that `x` holds $x_1$, and zooming into the domain $[1,3]$:\n\n::: {.cell execution_count=7}\n``` {.julia .cell-code}\nx0, x1 = 2, x\nplot(f, 1, 3, legend=false)\nplot!([x0, x0, x1], [0, f(x0), 0])  # why these values?\nscatter!([x0, x1], [0, 0])\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n![](newton_files/figure-html/cell-8-output-1.svg){}\n:::\n:::\n\n\nContinuing, though without visualizing the progress, this next step will compute $x_2$:\n\n::: {.cell execution_count=8}\n``` {.julia .cell-code}\nx = x - f(x)/fp(x)\nx, f(x)\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```\n(2.094568121104185, 0.00018572317327247845)\n```\n:::\n:::\n\n\nThis next step will compute $x_3$:\n\n::: {.cell execution_count=9}\n``` {.julia .cell-code}\nx = x - f(x)/fp(x)\nx, f(x)\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```\n(2.094551481698199, 1.7397612239733462e-9)\n```\n:::\n:::\n\n\nThis next step will compute $x_4$:\n\n::: {.cell execution_count=10}\n``` {.julia .cell-code}\nx = x - f(x)/fp(x)\nx, f(x)\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\n(2.0945514815423265, -8.881784197001252e-16)\n```\n:::\n:::\n\n\nThis next step will compute $x_5$:\n\n::: {.cell execution_count=11}\n``` {.julia .cell-code}\nx = x - f(x)/fp(x)\t\t# x stopped changing\nx, f(x)\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```\n(2.0945514815423265, -8.881784197001252e-16)\n```\n:::\n:::\n\n\nWe see that $x_4=x_5$, so the algorithm has stabilized. We also see that $f(x_4)$ is basically $0$ (Recall, `eps()` is the machine precision, or the size of the difference between floating point values at $1.0$ is basically $10^{-16}$, the size of $f(x_4)$.)\n\n\nYou can see in this case that the convergence happens quickly as soon as the algorithm gets close.\n\n\nThe approximate root is $x_4$.  It is important to realize that the actual, *exact*, answer is not likely to be the value computed by Newton's method, which we call `xstar` at times. In most cases, the true answer will be irrational and `xstar` a floating point number, which ultimately can never be better than an approximation to an irrational number.\n\n\nThe above example iterated until it was clear the algorithm does not improve itself, as the values returned did not change. This need not be the case for every problem.\n\n\nRather, we can determine two ways that the number is close enough to the answer:\n\n\n  * The sequence of `x`'s stop changing by much\n  * the values `f(x)` get close enough to zero.\n\n\nIn the above, the first one was used. In either case, rather than look for values to be equal (e.g. $x_{n+1} = x_{n}$ or $f(x_n) = 0$, we look at whether these two things are close enough to be so. That means for some tolerance, we stop when the change in the `x`'s is smaller than the tolerance or `f(x)` is smaller ‚Äì in absolute value ‚Äì than the tolerance.\n\n\n### Repeating steps\n\n\nThe above approach ‚Äì basically repeating steps ‚Äì can be tedious. There will be a function to do this for you (`newton`). One can use copy and paste to do much of this though:\n\n::: {.cell execution_count=12}\n``` {.julia .cell-code}\nf(x) = x^3 - 2x - 5\nx = 2\nx = x - f(x)/f'(x)\nx = x - f(x)/f'(x)\nx = x - f(x)/f'(x)\nx = x - f(x)/f'(x)\nx = x - f(x)/f'(x)\n\n(x, f(x))\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```\n(2.0945514815423265, -8.881784197001252e-16)\n```\n:::\n:::\n\n\n:::{.callout-note}\n## Note\nNewton looked at this same example in 1699 (B.T. Polyak, *Newton's method and its use in optimization*, European Journal of Operational Research. 02/2007; 181(3):1086-1096.) though his technique was slightly different as he did not use the derivative, *per se*, but rather an approximation based on the fact that his function was a polynomial (though identical to the derivative). Raphson (1690) proposed the general form, hence the usual name of Newton-Raphson method.\n\n:::\n\n---\n\n\n### Practice\n\n\n#### Question\n\n\nUsing Newton's method to find $\\sqrt{k}$ (by solving for roots of $f(x) = x^2 - k$) is also referred to as the Babylonian method, due to its origins. The resulting method\n\n\n\n$$\nx_{n+1} = \\frac{1}{2}(x_n + \\frac{k}{x_n})\n$$\n\n\nis described by the first-century [Greek mathematician Hero of Alexandria](http://en.wikipedia.org/wiki/Babylonian_method).\n\n\nLet $k=15$ and $x_0$ be $4$. What is the value of $x_3$?\n\n::: {.cell execution_count=13}\n\n::: {.cell-output .cell-output-display execution_count=13}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='15421087063142288827' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_15421087063142288827\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"15421087063142288827\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='15421087063142288827_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"15421087063142288827\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 3.8729833462074525) <= 0.0001);\n  var msgBox = document.getElementById('15421087063142288827_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_15421087063142288827\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_15421087063142288827\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nThe function $f(x) = \\sin(x)$ has derivative $f'(x) = \\cos(x)$. Use Newton's method to solve $f(x) = 0$ starting at $3$. Repeat 5 times. What value do you get for `x`?\n\n::: {.cell execution_count=14}\n\n::: {.cell-output .cell-output-display execution_count=14}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='10746610569431839190' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_10746610569431839190\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"10746610569431839190\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='10746610569431839190_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"10746610569431839190\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 3.141592653589793) <= 1.0e-14);\n  var msgBox = document.getElementById('10746610569431839190_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_10746610569431839190\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_10746610569431839190\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n(This can be used to compute $\\pi$ numerically, as the convergence is very fast. Here it takes 4 steps to verify.)\n\n\n#### Question\n\n\nLet $f(x) = x^2 - 3^x$. This has derivative $2x - 3^x \\cdot \\log(3)$. Starting with $x_0=0$, what does Newton's method converge on?\n\n::: {.cell execution_count=15}\n\n::: {.cell-output .cell-output-display execution_count=15}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='6226111295213461824' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_6226111295213461824\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"6226111295213461824\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='6226111295213461824_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"6226111295213461824\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - -0.6860267245362514) <= 1.0e-14);\n  var msgBox = document.getElementById('6226111295213461824_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_6226111295213461824\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_6226111295213461824\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n## Implementing a Newton's method function\n\n\nFor iterative algorithms it is better to repeat the expression until something happens ‚Äì not a fixed number of times.  In this case, we need a criteria to decide if the algorithm has converged. We shall use the following:\n\n\n  * If the value of $|x_{n+1} - x_n| < tol$ the algorithm has converged\n  * If the value of $|f(x_n)| < tol$ the algorithm has converged\n  * If the above hasn't happened by $n=100$ the algorithm fails to converge\n\n\nThis isn't perfect, but will be sufficient. (Well, in fact no stopping rule can be perfect, but this one doesn't account for the relative size of the $x_n$s which can be important.)\n\n\nThe first two steps require a tolerance. We will use `1e-14` for this. This is about 100 times the machine precision, `eps()`, which is sufficient when the answers are moderate in size. This is not very good if the answers are very large.\n\n\nA basic algorithm is to repeat a step of Newton's method until the above occurs. We wrap this up in a function for reuse, and employ a `while` loop to repeat the update step until something happens:\n\n::: {.cell execution_count=16}\n``` {.julia .cell-code}\nfunction nm(f, fp, x)\n\t xnew, xold = x, Inf\n\t fn, fo = f(xnew), Inf\n\n\t tol = 1e-14\n\t ctr = 1\n\n\t while (ctr < 100) && (abs(xnew - xold) > tol) && ( abs(fn - fo) > tol )\n\t   x = xnew - f(xnew)/fp(xnew) # update step\n\t   xnew, xold = x, xnew\n           fn, fo = f(xnew), fn\n\t   ctr = ctr + 1\n\t end\n\n\t if ctr == 100\n\t    error(\"Did not converge in 100 steps\")\n         else\n\t   xnew, ctr\n         end\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=16}\n```\nnm (generic function with 1 method)\n```\n:::\n:::\n\n\nHere we use the `nm` function to find a zero of this polynomial:\n\n::: {.cell execution_count=17}\n``` {.julia .cell-code}\nf(x) = x^3 - 5x + 1\nfp(x) = 3x^2 - 5\nxstar, ctr = nm(f, fp, 0)\t# takes 6 steps\n```\n\n::: {.cell-output .cell-output-display execution_count=17}\n```\n(0.20163967572340466, 6)\n```\n:::\n:::\n\n\nHowever, the `MTH229` package provides the `newton` function. So we shall use that in the sequel. To see the number of steps, the argument `verbose=true` may be given.\n\n\n---\n\nWe revisit a problem from a previous project, finding zeroes of the function $f(x) = \\exp(x) - x^4$. We know from previous work that there are three of them. Let's find one near $x=2$:\n\n::: {.cell execution_count=18}\n``` {.julia .cell-code}\nf(x) = exp(x) - x^4\nx = 2\nxstar = newton(f, 2)  # newton will use automatic differentiation for the derivative\n```\n\n::: {.cell-output .cell-output-display execution_count=18}\n```\n1.4296118247255556\n```\n:::\n:::\n\n\nIt took 8 steps and we are this close:\n\n::: {.cell execution_count=19}\n``` {.julia .cell-code}\nxstar, f(xstar)\n```\n\n::: {.cell-output .cell-output-display execution_count=19}\n```\n(1.4296118247255556, 0.0)\n```\n:::\n:::\n\n\nIn this case, the answer is exact up to floating point round off.\n\n\n### Practice\n\n\n#### Question\n\n\nRepeat the problem of finding a root of $f(x) = \\exp(x) - x^4$ starting at $x=2$. (`newton(f, 2, verbose=true)`). How many iterations does it take with the default tolerances?\n\n::: {.cell execution_count=20}\n\n::: {.cell-output .cell-output-display execution_count=20}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='15644382597620993076' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_15644382597620993076\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"15644382597620993076\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='15644382597620993076_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"15644382597620993076\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 6) <= 0.1);\n  var msgBox = document.getElementById('15644382597620993076_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_15644382597620993076\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_15644382597620993076\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nIf we repeat with $f(x) = \\exp(x) - x^4$ but start now at $x=8$ where does the algorithm converge?\n\n::: {.cell execution_count=21}\n\n::: {.cell-output .cell-output-display execution_count=21}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='7278851223074266761' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_7278851223074266761\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"7278851223074266761\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='7278851223074266761_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"7278851223074266761\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 8.6131694564414) <= 1.0e-6);\n  var msgBox = document.getElementById('7278851223074266761_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_7278851223074266761\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_7278851223074266761\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nLet $f(x) = \\sin(x) - \\cos(4\\cdot x)$.\n\n\nStarting at $\\pi/8$, solve for the root returned by Newton's method\n\n::: {.cell execution_count=22}\n\n::: {.cell-output .cell-output-display execution_count=22}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='760906322924176472' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_760906322924176472\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"760906322924176472\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='760906322924176472_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"760906322924176472\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 0.3141592653589793) <= 0.001);\n  var msgBox = document.getElementById('760906322924176472_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_760906322924176472\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_760906322924176472\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n## Numeric derivatives\n\n\nIn order to use Newton's method we need to evaluate $f'(x)$. We have used automatic differentiation above through `f'(x)`. Automatic differentiation returns a numerically accurate value for the derivative.\n\n\nHowever, Newton's method is actually fairly robust to using other related values to the derivative. That is the method will converge, though perhaps not as fast as with the derivative.\n\n\n### The secant method\n\n\nThe [secant method](http://en.wikipedia.org/wiki/Secant_method) is perhaps the oldest numerical linear algebra tool dating back over [3000 years](http://scholarship.rice.edu/bitstream/handle/1911/20568/1442093.PDF?sequence=1) well before Newton's method. Rather than use the derivative at $x_i$ to compute $x_{i+1}$, the secant line is used between $x_{i-1}$ and $x_i$. This method will also converge to a zero with a good starting point, though not nearly as quickly as Newton's method.\n\n\nYou can check ‚Äì if you want ‚Äì by repeating the last command until the change in `x2` is within your tolerance:\n\n::: {.cell execution_count=23}\n``` {.julia .cell-code}\nx2, x1 = 1, 2\t\t\t# initial guess of 2\nf(x) = x^2 - 2\t\t\t# some function\nfp(x1,x2) = (f(x1) - f(x2))/(x1 - x2)\nx2, x1 = x2 - f(x2)/fp(x1, x2), x2 # update step\n```\n\n::: {.cell-output .cell-output-display execution_count=23}\n```\n(1.3333333333333333, 1)\n```\n:::\n:::\n\n\nWe can repeat via copy and paste:\n\n::: {.cell execution_count=24}\n``` {.julia .cell-code}\nx2, x1 = x2 - f(x2)/fp(x1, x2), x2\nx2, x1 = x2 - f(x2)/fp(x1, x2), x2\nx2, x1 = x2 - f(x2)/fp(x1, x2), x2\nx2, x1 = x2 - f(x2)/fp(x1, x2), x2\nx2, x1 = x2 - f(x2)/fp(x1, x2), x2\n\nx2, f(x2)\n```\n\n::: {.cell-output .cell-output-display execution_count=24}\n```\n(1.4142135623730947, -8.881784197001252e-16)\n```\n:::\n:::\n\n\nThe last line shows the algorithm has basically converged, as the values agree to $10^{-14}$. We have\n\n\n### Using forward differences\n\n\nRecall the forward difference approximation to the derivative:\n\n\n\n$$\nf'(x) \\approx \\frac{f(x + h) - f(x)}{h}\n$$\n\n\nFor some small $h$ (with $h=10^{-8}$ a reasonable choice for many functions). This can be used\n\n\nOne can also use approximate derivatives based on forward differences in place of $f'(x)$ in the formula. Again, this won't be as fast.\n\n\nThe update step $x - f(x)/f'(x)$ becomes\n\n\n\n$$\nx - \\frac{h \\cdot f(x)}{f(x+h) - f(x)}.\n$$\n\n\nThe issue with this approximation is when the estimated value gets close to the actual root, the value of $h$ becomes too large. Steffenson's method replaces $h$ with $f(x)$, which for values close to a root gets quite small. This improves the convergence rate to be on par with Newton's method. In this case, the update step looks like\n\n\n\n$$\nx - \\frac{f(x)^2}{f(x+ f(x)) - f(x)}.\n$$\n\n\n### Problems\n\n\n#### Question\n\n\nUse the secant method to find a root to $f(x) = \\cos(x) - x^3$ starting with $x_0=1/2$ and $x_1=1$.\n\n::: {.cell execution_count=25}\n\n::: {.cell-output .cell-output-display execution_count=25}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='10117021261034983886' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_10117021261034983886\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"10117021261034983886\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='10117021261034983886_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"10117021261034983886\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 0.8654740331016144) <= 1.0e-10);\n  var msgBox = document.getElementById('10117021261034983886_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_10117021261034983886\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_10117021261034983886\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nUse the secant method to find a root to $f(x) = x^5 + x - 1$ starting with $x_0=1/2$ and $x_1=1$.\n\n::: {.cell execution_count=26}\n\n::: {.cell-output .cell-output-display execution_count=26}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='16568234526455736184' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_16568234526455736184\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"16568234526455736184\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='16568234526455736184_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"16568234526455736184\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 0.7548776662466927) <= 1.0e-10);\n  var msgBox = document.getElementById('16568234526455736184_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_16568234526455736184\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_16568234526455736184\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n## The `find_zero` function\n\n\nThere are also very fast algorithms which do not require a derivative. The `Roots` package provides an interface to these through the `find_zero` function.\n\n\nThe `find_zero` function has two interfaces:\n\n\n  * when called with a bracketing interval, as in `find_zero(f, (a,b))`, it will use a bisection method to find a root.\n  * when called with a starting point, as in `find_zero(f, a)`, it will use an iterative algorithm to search for a root.\n\n\nMany bracketing methods (like bisection) are guaranteed to converge, but can be slow. The iterative algorithm used by default with `find_zero` tries to speed the convergence up, but if along the way it finds a bracketing interval, that will guarantee convergence.\n\n\nWe focus on the simplest usage of `find_zero` where an initial guess is supplied and the default order is used. Here is an example to find $-\\sqrt{2}$:\n\n::: {.cell execution_count=27}\n``` {.julia .cell-code}\nf(x) = x^2 - 2\nfind_zero(f, -1)\n```\n\n::: {.cell-output .cell-output-display execution_count=27}\n```\n-1.414213562373095\n```\n:::\n:::\n\n\n### Using `find_zero` and a graph to find all roots.\n\n\nLet's look, again, at the task of finding all zeros to the function $e^x - x^4$. We follow a standard approach:\n\n\n  * graph the function to roughly identify potential zeros\n  * use these as starting points for `find_zero` to improve\n\n\nThe following graph suggests, perhaps, there may be $3$ zeros, one near $9$, one near $2$ and one near $-1$.\n\n::: {.cell execution_count=28}\n``` {.julia .cell-code}\nf(x) = exp(x) - x^4\nplot(f, -5,9)\n```\n\n::: {.cell-output .cell-output-display execution_count=28}\n![](newton_files/figure-html/cell-29-output-1.svg){}\n:::\n:::\n\n\nWe can improve these guesses with\n\n::: {.cell execution_count=29}\n``` {.julia .cell-code}\nfind_zero(f, 9), find_zero(f, 2), find_zero(f, -1)\n```\n\n::: {.cell-output .cell-output-display execution_count=29}\n```\n(8.6131694564414, 1.4296118247255556, -0.8155534188089607)\n```\n:::\n:::\n\n\nThe above can be written without repeating `find_zero` by using a comprehension:\n\n::: {.cell execution_count=30}\n``` {.julia .cell-code}\n[find_zero(f, x) for x in [9, 2, -1]]\n```\n\n::: {.cell-output .cell-output-display execution_count=30}\n```\n3-element Vector{Float64}:\n  8.6131694564414\n  1.4296118247255556\n -0.8155534188089607\n```\n:::\n:::\n\n\nOr even more compactly, using the broadcast notation:\n\n::: {.cell execution_count=31}\n``` {.julia .cell-code}\nfind_zero.(f, [-1, 2, 9])\n```\n\n::: {.cell-output .cell-output-display execution_count=31}\n```\n3-element Vector{Float64}:\n -0.8155534188089607\n  1.4296118247255556\n  8.6131694564414\n```\n:::\n:::\n\n\n---\n\n\nAs another illustration, let $f(x) = \\cos^2(x^2)$ on $[-1,2]$. Find all the zeros of the derivative of $f(x)$.\n\n\nWe graph the derivative to identify starting points:\n\n::: {.cell execution_count=32}\n``` {.julia .cell-code}\nf(x) = cos(x^2)^2\nplot(f', -1, 2)\n```\n\n::: {.cell-output .cell-output-display execution_count=32}\n![](newton_files/figure-html/cell-33-output-1.svg){}\n:::\n:::\n\n\nWe see there are 3 potential zeros, one near 0, one near 1.2 and close to 1.7. Here we improve our guesses:\n\n::: {.cell execution_count=33}\n``` {.julia .cell-code}\nxs = find_zero.(f', [0, 1.2, 1.7])   # or [find_zero(f', x) for x in [0, 1.2, 1.7]]\n```\n\n::: {.cell-output .cell-output-display execution_count=33}\n```\n3-element Vector{Float64}:\n 0.0\n 1.2533141373155003\n 1.772453850905516\n```\n:::\n:::\n\n\nThe function values at these points can be found with\n\n::: {.cell execution_count=34}\n``` {.julia .cell-code}\nf.(xs)               # or map(f, xs) or [f(x) for x in xs]\n```\n\n::: {.cell-output .cell-output-display execution_count=34}\n```\n3-element Vector{Float64}:\n 1.0\n 2.5860584564030066e-32\n 1.0\n```\n:::\n:::\n\n\n##### find_zeros\n\n\nFor such tasks, `find_zeros` also works well. This function looks for all zeros in the interval `[a,b]`:\n\n::: {.cell execution_count=35}\n``` {.julia .cell-code}\nfind_zeros(f, -1, 2)\n```\n\n::: {.cell-output .cell-output-display execution_count=35}\n```\n1-element Vector{Float64}:\n 1.2533141373155003\n```\n:::\n:::\n\n\n### Practice\n\n\n#### Question\n\n\nLet\n\n\n\n$$\nf(x) = 4x^4 -5x^3 + 4x^2 -20x - 6\n$$\n\n\nApply Newton's method with $x_0=0$ using an automatic derivative. What value does it converge to?\n\n::: {.cell execution_count=36}\n\n::: {.cell-output .cell-output-display execution_count=36}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='9537631000345703266' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_9537631000345703266\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"9537631000345703266\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='9537631000345703266_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"9537631000345703266\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - -0.27798094871260326) <= 1.0e-10);\n  var msgBox = document.getElementById('9537631000345703266_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_9537631000345703266\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_9537631000345703266\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nLet's try with a function where the derivative is not known easily. If we set\n\n\n\n$$\nf(x) = x^x - 2\n$$\n\n\nCan we find a root using Newton's method, where $x > 0$?\n\n\nWe graph the function to see, using a smallish interval at first:\n\n::: {.cell execution_count=37}\n``` {.julia .cell-code}\nf(x) = x^x - 2\nplot(f, 0, 2)\nplot!(zero)\n```\n\n::: {.cell-output .cell-output-display execution_count=37}\n![](newton_files/figure-html/cell-38-output-1.svg){}\n:::\n:::\n\n\nEyeing this, we pick an initial point, $1$, for Newton's method (`newton(f, 1)`) to the right of the minimum, which appears to be around $x=0.35$.\n\n\nWhat is the value of the approximate zero?\n\n::: {.cell execution_count=38}\n\n::: {.cell-output .cell-output-display execution_count=38}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='14360491902619218315' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_14360491902619218315\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"14360491902619218315\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='14360491902619218315_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"14360491902619218315\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 1.5596104694623694) <= 1.0e-8);\n  var msgBox = document.getElementById('14360491902619218315_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_14360491902619218315\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_14360491902619218315\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nUse `find_zero` to find the one root of `x^5 - x - 1`. First plot to get an estimate.\n\n::: {.cell execution_count=39}\n\n::: {.cell-output .cell-output-display execution_count=39}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='9374979363749401597' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_9374979363749401597\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"9374979363749401597\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='9374979363749401597_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"9374979363749401597\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 1.1673039782614187) <= 1.0e-8);\n  var msgBox = document.getElementById('9374979363749401597_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_9374979363749401597\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_9374979363749401597\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nLet $f(x) = 5/\\sin(x) + 8/\\cos(x)$, Starting at $x=\\pi/4$, use `find_zero` to find a root of the derivative of $f(x)$ given by `f'`.\n\n::: {.cell execution_count=40}\n\n::: {.cell-output .cell-output-display execution_count=40}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='1794423514247040332' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_1794423514247040332\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"1794423514247040332\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='1794423514247040332_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"1794423514247040332\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 0.7073827215431158) <= 1.0e-8);\n  var msgBox = document.getElementById('1794423514247040332_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_1794423514247040332\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_1794423514247040332\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nThe tangent line of `f` at `c` can be computed by\n\n::: {.cell execution_count=41}\n``` {.julia .cell-code}\ntangent(f, c) = x -> f(c) + f'(c) * (x - c)\n```\n\n::: {.cell-output .cell-output-display execution_count=41}\n```\ntangent (generic function with 1 method)\n```\n:::\n:::\n\n\nLet $f(x) = x^2 - 3x + 5$. Use `find_zero` to find the intersection point of the tangent line at $1$ and the tangent line at $3$. Where does this happen?\n\n\n(Hint, apply `find_zero` to `h(x) = tangent(f, 1)(x) -  tangent(f, 3)(x)` starting at 1.)\n\n::: {.cell execution_count=42}\n\n::: {.cell-output .cell-output-display execution_count=42}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='17196520679415540382' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_17196520679415540382\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"17196520679415540382\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='17196520679415540382_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"17196520679415540382\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 2.0) <= 1.0e-8);\n  var msgBox = document.getElementById('17196520679415540382_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_17196520679415540382\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_17196520679415540382\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n## Various issues with Newton's method\n\n\nAs great as Newton's method is, it won't always work for various reasons, some of which are described in the following. Here is what you need to keep in mind. Newton's method works well if\n\n\n  * The zero is a simple root ‚Äì that is of multiplicity 1\n  * The magnitude, $|f'(x)|$, is not too small (If the tangent line is nearly flat, the next guess is far from the previous)\n  * The magnitude, $|f''(x)|$, is not too big (function doesn't have so much curve that the tangent line is a poor approximation)\n  * The initial guess is not to far from a zero\n\n\nThe above points come from the following formula which you can find in many texts.\n\n\n\n$$\n\\Delta x_{i+1} = \\frac{f' '(\\alpha)}{f'(\\alpha)}(\\Delta x_i)^2 + \\text{error}\n$$\n\n\nwhich is valid when $f(x)$ satisfies $f(\\alpha) = 0$, the third derivative exists near $\\alpha$, and $\\Delta x_i = x_i - \\alpha$ is the error between the zero and the $i$ th estimate.  When the derivative at $\\alpha$ is non-zero, the error is basically a constant times $\\Delta x_i^2$. This is interpreted as saying there is quadratic convergence in the error, as the next one is related to the previous one squared.\n\n\nNow we look at some cases where the above three points do not hold.\n\n\n### The initial guess is no where near the end results\n\n\nLet $f(x) = \\sin(x) - x/4$ and $x_0 = 2\\pi$. This value is deliberately a poor choice:\n\n::: {.cell execution_count=43}\n``` {.julia .cell-code}\nf(x) = sin(x) - x/4\nfp(x) = cos(x) - 1/4\nnewton(f, fp, 2pi, verbose=true)\n```\n\n::: {.cell-output .cell-output-display}\n```\nResults of univariate zero finding:\n\n* Converged to: -2.4745767873698292\n* Algorithm: Roots.Newton()\n* iterations: 21\n* stopped as |f(x_n)| ‚â§ max(Œ¥, |x|‚ãÖœµ) using Œ¥ = atol, œµ = rtol\n\nTrace:\nx_0 =  6.2831853071795862,\t fx_0 = -1.5707963267948968\nx_1 =  8.3775804095727828,\t fx_1 = -1.2283696986087573\nx_2 =  6.7397541447611076,\t fx_2 = -1.2440675381169748\nx_3 =  8.6608848638032576,\t fx_3 = -1.4734831418043957\nx_4 =  7.1451872496698430,\t fx_4 = -1.0271496267351363\nx_5 =  9.7071751202999792,\t fx_5 = -2.7054524356150202\nx_6 =  7.4719848359402210,\t fx_6 = -0.9400740775668593\nx_7 =  15.1289271125939990,\t fx_7 = -3.2350143158338276\nx_8 =  12.1528068967848881,\t fx_8 = -3.4400768736735046\nx_9 =  17.3204581594883038,\t fx_9 = -5.3292452806856589\nx_10 = -8.2623524312131380,\t fx_10 =  1.1478190870135017\nx_11 = -6.4886031684043539,\t fx_11 =  1.4181745383583302\nx_12 = -8.4340373897987018,\t fx_12 =  1.2720772543609207\nx_13 = -6.8400965825145015,\t fx_13 =  1.1814574151203185\nx_14 = -8.8128360727706223,\t fx_14 =  1.6287509745643769\nx_15 = -7.2885505274866542,\t fx_15 =  0.9777799311577077\nx_16 = -10.7099948647448411,\t fx_16 =  3.6369972987156078\nx_17 = -3.8698495348738184,\t fx_17 =  1.6330320788034982\nx_18 = -2.2308115333928380,\t fx_18 = -0.2322800246363578\nx_19 = -2.4999254908286410,\t fx_19 =  0.0264495377175690\nx_20 = -2.4747617934295065,\t fx_20 =  0.0001916160487524\nx_21 = -2.4745767975896880,\t fx_21 =  0.0000000105844145\nx_22 = -2.4745767873698292,\t fx_22 =  0.0000000000000002\n\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n* function evaluations ‚âà 44\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=43}\n```\n-2.4745767873698292\n```\n:::\n:::\n\n\nThough `julia` makes this happen fast, it will take more than  20 steps before converging and the answer is no where near the guess. This trace might show why\n\n\n![Newton, way off](figures/newton/newton-way-off.png)\n\n\n#### Question\n\n\nWhen $|f'(x)|$ is too close to $0$, the path can jump alot. In the figure, what was the longest jump?\n\n::: {.cell execution_count=44}\n\n::: {.cell-output .cell-output-display execution_count=44}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='213637079549375440' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_213637079549375440\">\n        <div style=\"padding-top: 5px\">\n    <div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_213637079549375440_1\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_213637079549375440\"\n              id=\"radio_213637079549375440_1\" value=\"1\">\n      </input>\n      <span class=\"label-body px-1\">\n        From about 0 to -5\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_213637079549375440_2\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_213637079549375440\"\n              id=\"radio_213637079549375440_2\" value=\"2\">\n      </input>\n      <span class=\"label-body px-1\">\n        From about -12 to -3\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_213637079549375440_3\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_213637079549375440\"\n              id=\"radio_213637079549375440_3\" value=\"3\">\n      </input>\n      <span class=\"label-body px-1\">\n        From about 17 to -10\n      </span>\n    </label>\n</div>\n\n    \n        </div>\n      </div>\n      <div id='213637079549375440_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_213637079549375440\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 3;\n    var msgBox = document.getElementById('213637079549375440_message');\n      if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_213637079549375440\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_213637079549375440\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nThe method did find a zero, but the initial guess was nowhere near the final zero. How close was the closest zero to the initial guess?\n\n::: {.cell execution_count=45}\n\n::: {.cell-output .cell-output-display execution_count=45}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='13679043601397088146' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_13679043601397088146\">\n        <div style=\"padding-top: 5px\">\n    <div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_13679043601397088146_1\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_13679043601397088146\"\n              id=\"radio_13679043601397088146_1\" value=\"1\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>2pi</code>\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_13679043601397088146_2\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_13679043601397088146\"\n              id=\"radio_13679043601397088146_2\" value=\"2\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>8.75</code>\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_13679043601397088146_3\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_13679043601397088146\"\n              id=\"radio_13679043601397088146_3\" value=\"3\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>3.8</code>\n      </span>\n    </label>\n</div>\n\n    \n        </div>\n      </div>\n      <div id='13679043601397088146_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_13679043601397088146\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 3;\n    var msgBox = document.getElementById('13679043601397088146_message');\n      if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_13679043601397088146\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_13679043601397088146\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n### Function has a poor shape\n\n\nLet $f(x) = x^{1/3}$. We know the root is 0. Let's see what happens if we use Newton's method. We have to be careful though as `julia` thinks that cube roots of negative numbers (via `x^(1/3)` are `NaN`, not a number. (You can avoid this, by making your number complex, e.g. `x + 0*im`, but then the real answer is not given as an answer. It is just one of three and not the chosen one.)\n\n\nSo we define our function using `julia`'s `cbrt` function, which works as we desire for negative numbers, as follows:\n\n::: {.cell execution_count=46}\n``` {.julia .cell-code}\nf(x) = cbrt(x)\nxstar = newton(f, 2)\n```\n\n::: {.cell-output .cell-output-error}\n```\nLoadError: Roots.ConvergenceFailed(\"Algorithm failed to converge\")\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWARNING: both SymPy and SpecialFunctions export \"ellipk\"; uses of it in module MTH229 must be qualified\n```\n:::\n:::\n\n\nStill an issue. Why?\n\n\n#### Question\n\n\nDespite all our care with the derivative, the method did not converge in $200$ steps. Can you see why from this trace?\n\n\n![Newton, cubic](figures/newton/newton-cubic.png)\n\n::: {.cell execution_count=47}\n\n::: {.cell-output .cell-output-display execution_count=47}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='12755103916007103580' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_12755103916007103580\">\n        <div style=\"padding-top: 5px\">\n    <div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_12755103916007103580_1\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_12755103916007103580\"\n              id=\"radio_12755103916007103580_1\" value=\"1\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>|f&#39;&#40;x&#41;|</code> gets too small\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_12755103916007103580_2\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_12755103916007103580\"\n              id=\"radio_12755103916007103580_2\" value=\"2\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>|f&#39;&#39;&#40;x&#41;|</code> gets too big at 0\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_12755103916007103580_3\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_12755103916007103580\"\n              id=\"radio_12755103916007103580_3\" value=\"3\">\n      </input>\n      <span class=\"label-body px-1\">\n        Initial guess is too far from a zero.\n      </span>\n    </label>\n</div>\n\n    \n        </div>\n      </div>\n      <div id='12755103916007103580_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_12755103916007103580\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 2;\n    var msgBox = document.getElementById('12755103916007103580_message');\n      if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_12755103916007103580\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_12755103916007103580\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n#### Question: solve by hand\n\nFor $f(x) = x^{1/3}$, simplify the expression by hand:\n\n```math\nx - f(x)/f'(x)\n```\n\nWhat do you get?\n\n::: {.cell execution_count=48}\n\n::: {.cell-output .cell-output-display execution_count=48}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='8141851012890675777' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_8141851012890675777\">\n        <div style=\"padding-top: 5px\">\n    <div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_8141851012890675777_1\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_8141851012890675777\"\n              id=\"radio_8141851012890675777_1\" value=\"1\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>x - &#40;1/3&#41;x^&#123;-1/3&#125;</code>\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_8141851012890675777_2\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_8141851012890675777\"\n              id=\"radio_8141851012890675777_2\" value=\"2\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>-2x</code>\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_8141851012890675777_3\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_8141851012890675777\"\n              id=\"radio_8141851012890675777_3\" value=\"3\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>x - 3/x</code>\n      </span>\n    </label>\n</div>\n\n    \n        </div>\n      </div>\n      <div id='8141851012890675777_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_8141851012890675777\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 2;\n    var msgBox = document.getElementById('8141851012890675777_message');\n      if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_8141851012890675777\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_8141851012890675777\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\nApply Newton's method to $f(x) = (x-2)^7 \\cdot (x-3) \\cdot (x-4)$ starting at\n1.9981. The algorithm does not converge to 2 -- an obvious root. From\na plot of $f(x)$ explain why not:\n\n::: {.cell execution_count=49}\n\n::: {.cell-output .cell-output-display execution_count=49}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='12599992606976682719' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_12599992606976682719\">\n        <div style=\"padding-top: 5px\">\n    <div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_12599992606976682719_1\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_12599992606976682719\"\n              id=\"radio_12599992606976682719_1\" value=\"1\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>|f&#39;&#40;x&#41;|</code> gets too small\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_12599992606976682719_2\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_12599992606976682719\"\n              id=\"radio_12599992606976682719_2\" value=\"2\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>|f&#39;&#39;&#40;x&#41;|</code> gets too big at 0\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_12599992606976682719_3\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_12599992606976682719\"\n              id=\"radio_12599992606976682719_3\" value=\"3\">\n      </input>\n      <span class=\"label-body px-1\">\n        Initial guess is to far from a zero.\n      </span>\n    </label>\n</div>\n\n    \n        </div>\n      </div>\n      <div id='12599992606976682719_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_12599992606976682719\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 1;\n    var msgBox = document.getElementById('12599992606976682719_message');\n      if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_12599992606976682719\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_12599992606976682719\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\nThe function `f(x) = atan(x)` is a strictly increasing function with one zero, $0$. Yet it can pose problems with Newton's method. For which values of $x$ does Newton's method converge:\n\n::: {.cell execution_count=50}\n\n::: {.cell-output .cell-output-display execution_count=50}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='933129778008151327' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_933129778008151327\">\n        <div style=\"padding-top: 5px\">\n    <div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_933129778008151327_1\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_933129778008151327\"\n              id=\"radio_933129778008151327_1\" value=\"1\">\n      </input>\n      <span class=\"label-body px-1\">\n        For each of \\(1\\), \\(2\\) and \\(\\pi\\)\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_933129778008151327_2\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_933129778008151327\"\n              id=\"radio_933129778008151327_2\" value=\"2\">\n      </input>\n      <span class=\"label-body px-1\">\n        For \\(1\\) and \\(2\\) but not \\(\\pi\\)\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_933129778008151327_3\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_933129778008151327\"\n              id=\"radio_933129778008151327_3\" value=\"3\">\n      </input>\n      <span class=\"label-body px-1\">\n        For \\(1\\) but not \\(2\\) or \\(\\pi\\)\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_933129778008151327_4\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_933129778008151327\"\n              id=\"radio_933129778008151327_4\" value=\"4\">\n      </input>\n      <span class=\"label-body px-1\">\n        For none of  \\(1\\), \\(2\\) and \\(\\pi\\)\n      </span>\n    </label>\n</div>\n\n    \n        </div>\n      </div>\n      <div id='933129778008151327_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_933129778008151327\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 3;\n    var msgBox = document.getElementById('933129778008151327_message');\n      if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_933129778008151327\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_933129778008151327\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n### Cycles\n\nSometimes, the process can cycle even for reasonable functions.\n\n\n#### Question\n\nLet $f(x) = x^3 - 5x$. Starting with $x_0=1$, compute three steps of\nNewton's method. What are the terms in the series produced?\n\n::: {.cell execution_count=51}\n\n::: {.cell-output .cell-output-display execution_count=51}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='8509146800468877691' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_8509146800468877691\">\n        <div style=\"padding-top: 5px\">\n    <div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_8509146800468877691_1\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_8509146800468877691\"\n              id=\"radio_8509146800468877691_1\" value=\"1\">\n      </input>\n      <span class=\"label-body px-1\">\n        \\(-1.0, 1.0, -1.0, ...\\)\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_8509146800468877691_2\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_8509146800468877691\"\n              id=\"radio_8509146800468877691_2\" value=\"2\">\n      </input>\n      <span class=\"label-body px-1\">\n        \\(-1.0, 0.6666666666666667, -0.2850952524822228, ...\\)\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_8509146800468877691_3\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_8509146800468877691\"\n              id=\"radio_8509146800468877691_3\" value=\"3\">\n      </input>\n      <span class=\"label-body px-1\">\n        \\(1, -2, -4,  ...\\)\n      </span>\n    </label>\n</div>\n\n    \n        </div>\n      </div>\n      <div id='8509146800468877691_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_8509146800468877691\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 1;\n    var msgBox = document.getElementById('8509146800468877691_message');\n      if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_8509146800468877691\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_8509146800468877691\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n#### Question: always cycles...\n\nHere is a pathological example where the value always cycles no matter\nwhere you start unless you start at $0$.\n\nLet $f(x) = \\sqrt{|x|}$. This is the one-sided square root function\nturned into an even function. We could also have defined it by:\n\n::: {.cell execution_count=52}\n``` {.julia .cell-code}\nf(x) = x >= 0 ? sqrt(x) : sqrt(-x)\n```\n\n::: {.cell-output .cell-output-display execution_count=52}\n```\nf (generic function with 1 method)\n```\n:::\n:::\n\n\nwhere the ternary operator `a ? b : c` looks at `a` and if true will\nexecute `b` otherwise `c`.\n\nThis makes it easier to write the derivative of the function in `Julia`:\n\n::: {.cell execution_count=53}\n``` {.julia .cell-code}\nfp(x) = x >=0 ? (1/2)*sqrt(x)/x : -(1/2)*sqrt(-x)/(-x)\n```\n\n::: {.cell-output .cell-output-display execution_count=53}\n```\nfp (generic function with 2 methods)\n```\n:::\n:::\n\n\nTo see what happens when using Newton's method, lets start at $x=2$\n\n::: {.cell execution_count=54}\n``` {.julia .cell-code}\nx = 2\nx = x - f(x)/fp(x)\nx = x - f(x)/fp(x)\nx = x - f(x)/fp(x)\n```\n\n::: {.cell-output .cell-output-display execution_count=54}\n```\n-2.0\n```\n:::\n:::\n\n\nTry again with $x=3.0$ What sequence do you get:\n\n::: {.cell execution_count=55}\n\n::: {.cell-output .cell-output-display execution_count=55}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='5717175770208437806' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_5717175770208437806\">\n        <div style=\"padding-top: 5px\">\n    <div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_5717175770208437806_1\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_5717175770208437806\"\n              id=\"radio_5717175770208437806_1\" value=\"1\">\n      </input>\n      <span class=\"label-body px-1\">\n        \\(3, 2.0, 1.0, 0.0, -1.0, ...\\)\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_5717175770208437806_2\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_5717175770208437806\"\n              id=\"radio_5717175770208437806_2\" value=\"2\">\n      </input>\n      <span class=\"label-body px-1\">\n        \\(3, -3.0, 3.0, -3.0, ...\\)\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_5717175770208437806_3\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_5717175770208437806\"\n              id=\"radio_5717175770208437806_3\" value=\"3\">\n      </input>\n      <span class=\"label-body px-1\">\n        \\(2, -2.0, 2.0, -2.0\\)\n      </span>\n    </label>\n</div>\n\n    \n        </div>\n      </div>\n      <div id='5717175770208437806_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_5717175770208437806\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 2;\n    var msgBox = document.getElementById('5717175770208437806_message');\n      if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_5717175770208437806\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_5717175770208437806\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "newton_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}