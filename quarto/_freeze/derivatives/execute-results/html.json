{
  "hash": "4d0192e53b8f837fee03373980b5241a",
  "result": {
    "markdown": "# Approximate derivatives in Julia\n\n\n\n<br/>\nA notebook for this material:\n[ipynb](https://raw.githubusercontent.com/mth229/229-projects/master/06-derivatives.ipynb)\n[(Pluto html)](./229-projects/06-derivatives.html)\n[(With commentary)](./229-projects/06-derivatives-pluto-commentary.html)\n\n\n\n## Introduction\n\nWe load our packages to begin.\n\n``` {.julia .cell-code}\nusing MTH229\nusing Plots\n```\n\n\nSingle-variable calculus has two main concepts: the derivative and the integral, both defined in terms of a third important concept: the limit. The derivative is what we discuss here. The derivative allows us to talk about a tangent line to a curve. This is often called a line that touches the curve at just one point, but that isn't quite correct, though often the case locally. A better idea would be to say it is the line that best approximates the curve at that point. That is, if we were to zoom in to the graph it might appear to look straight, and that straightness would have a slope that would match the tangent line. This idea leads to a primary use of the derivative ‚Äì to approximate functions with simpler lines.  Of course, this intuition is informal, a definition is in terms of the slope of approximating secant lines.\n\n\nHistorically, Fermat, in a treatise on finding maxima and minima, approached the problem of finding the tangent line by comparing the value of $f(x)$ to a nearby value $f(x+h)$. Working with polynomials, meant that subtracting $f(x+h) - f(x)$ led to a polynomial in $h$. Dividing by $h$ and then setting $h=0$ yields an answer for the slope.\n\n\nThe more modern approach (well Cauchy in the 1820s) defines the derivative of a function, $f$, at a point $c$ as the slope of the *tangent line*, defined in terms of the *limit* of the slopes of approximating secant lines. The notation is:\n\n\n\n$$\nf'( c ) = \\lim_{h \\rightarrow 0} \\frac{f(c + h) - f( c)}{h}.\\quad\\text{Derivative at a point}\n$$\n\n\nAs mentioned, intuitively, the tangent line is the best straight-line approximation to a function near the point $(c, f( c))$ and would have slope given by the derivative.\n\n\nThis graph shows $f(x) = 2 - x^2$ and various secant lines when $c=-0.75$.\n\n::: {.cell execution_count=4}\n``` {.julia .cell-code}\nf(x) = 2 - x^2\nc = -0.75\nsec_line(h) = secant(f, c, c+h)                # secant in MTH229 package\nplot(f, -1, 1, legend=false)\nplot!(sec_line(1))\nplot!(sec_line(0.75))\nplot!(sec_line(0.5))\nplot!(sec_line(0.25))\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n![](derivatives_files/figure-html/cell-5-output-1.svg){}\n:::\n:::\n\n\nAs the value of $h$ goes towards 0 along the path $1$, $0.75$, $0.5$, $0.25$, ... the slope of the secant line heads towards the slope of the tangent line, in this case $2\\cdot 0.75 = 1.5$.\n\n\nUsing the idea of a derivative at a point, one defines the derivative of the function $f$ to be the function which for each $x$ returns the derivative of $f$ at the point $x$. Notationally, this just replaces $c$ above with $x$, but conceptually there is a bit more to it.\n\n\n## Forward difference quotients, Slope of the tangent line\n\n\nThe rules of derivatives allow for a mechanical approach to taking derivatives with the power rule, chain rule and some special cases. In this project we look at approaching the derivative numerically. We start by investigating *approximate derivatives* computed with *finite difference quotients*.\n\n\nThe most naive approximation is simply to assume $h$ is some small number and use that to approximate the limit above:\n\n::: {.cell execution_count=5}\n``` {.julia .cell-code}\nf(x) = x^2 - 2x; fp(x) = 2x - 2\nh = .001\nc = 3\n( f(c + h) - f(c) ) / h\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\n4.000999999999699\n```\n:::\n:::\n\n\nThis is known as the *forward difference quotient* approximation to the derivative. For this example, the difference between the approximation and the actual slope is:\n\n::: {.cell execution_count=6}\n``` {.julia .cell-code}\n( f(c + h) - f(c) ) / h - fp(c)\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\n0.0009999999996992415\n```\n:::\n:::\n\n\nThat is not too close, just to 3 digits of accuracy.\n\n\nNotationally, we may write this as:\n\n\n\n$$\nf'( c) \\approx \\frac{f(c + h) - f( c) }{h}\n$$\n\n\nFor some small value of $h$. The equals sign is replaced by an approximation symbol, as there is no limit expression written.\n\n\n##### Example Derivative at a point\n\n\nLet's try the derivative of some well known function.  We know the derivative of $f(x) = \\sin(x)$ is $f'(x) = \\cos(x)$. Let's see if the above works well:\n\n::: {.cell execution_count=7}\n``` {.julia .cell-code}\nf(x) = sin(x); fp(x) = cos(x)\nc = pi/4; h = 0.0001\n( f(c + h) - f(c) )/h - fp(c)\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```\n-3.535651724428934e-5\n```\n:::\n:::\n\n\nNot as good as we can get ‚Äì the error is like `1e-5`, but not too bad already.\n\n\n##### Example Finding profit\n\n\nSuppose the tractor company John Deere models its profit per units sold through the function $P(x) = 50 e^{x/250}/(1 - e^{x/250})$. Find the marginal profit for $x=200$.\n\n\nThe marginal profit is the change in profit per unit sold ‚Äì or the derivative ‚Äì at $x=200$.  We can find this quite simply by either differentiating directly, or as we do here, approximating the answer with `julia`. We first note that the function above, is a composition, so it may be written using two functions:\n\n::: {.cell execution_count=8}\n``` {.julia .cell-code}\nf1(x) = exp(x)/(1 - exp(x))\nf(x) = 50 * f1(x/250)\nc = 200; h = 0.0001;\nres = (f(c+h) - f(c))/h\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```\n0.29635326299626286\n```\n:::\n:::\n\n\nIf $50$ is the maximum profit, this is a percentage increase of:\n\n::: {.cell execution_count=9}\n``` {.julia .cell-code}\n(res/50) * 100\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\n0.5927065259925257\n```\n:::\n:::\n\n\nor a bit more than half a percent.\n\n\n##### Example Finding the tangent line at a point\n\n\nLet $f(x) = x^x$. Find the tangent line at $c=2$. Compare the difference between the value of the tangent line  and the function at $x=2.1$.\n\n\nThe tangent line is most easily expressed in terms of the *point-slope* formula for a line where the point is $(c, f( c))$ and the slope is $f'( c)$. This gives:\n\n\n\n$$\ny = f( c) + f'( c)\\cdot(x - c)\n$$\n\n\nIn the following, the slope of the tangent line will be *approximated* using a numeric derivative.  We use $h=0.0001$:\n\n::: {.cell execution_count=10}\n``` {.julia .cell-code}\nf(x) = x^x\nc = 2; h = 0.0001\nm = ( f(c + h) - f(c) ) / h\ntangent_line(x) = f(c) + m * (x - c)\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```\ntangent_line (generic function with 1 method)\n```\n:::\n:::\n\n\nTo compare the difference, we have:\n\n::: {.cell execution_count=11}\n``` {.julia .cell-code}\nf(2.1) - tangent_line(2.1)\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```\n0.07231187980696063\n```\n:::\n:::\n\n\nA graph shows this difference:\n\n::: {.cell execution_count=12}\n``` {.julia .cell-code}\nplot([f, tangent_line], 1.85, 2.15)\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n![](derivatives_files/figure-html/cell-13-output-1.svg){}\n:::\n:::\n\n\n### Practice\n\n\n#### Question\n\n\nFind the slope of the tangent line of $f(x) = x\\log(x)$ at the value $x=1$ using $h=0.0001$ and the forward difference quotient method:\n\n::: {.cell execution_count=13}\n\n::: {.cell-output .cell-output-display execution_count=14}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='10959123845188086665' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_10959123845188086665\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"10959123845188086665\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='10959123845188086665_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"10959123845188086665\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 1.0000499983333064) <= 1.0e-6);\n  var msgBox = document.getElementById('10959123845188086665_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_10959123845188086665\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_10959123845188086665\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nFind the slope of the tangent line of $f(x) = x-\\log(x)$ at the value $x=1$ using $h=0.0001$ and the forward difference quotient method:\n\n::: {.cell execution_count=14}\n\n::: {.cell-output .cell-output-display execution_count=15}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='2682078747648555000' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_2682078747648555000\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"2682078747648555000\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='2682078747648555000_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"2682078747648555000\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 4.999666680660653e-5) <= 1.0e-6);\n  var msgBox = document.getElementById('2682078747648555000_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_2682078747648555000\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_2682078747648555000\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nThe built-in `airyai` function, when called as `airyai(x)`, returns the so-called Airy function, a special function named after\n\n\n[George Biddell Airy](http://en.wikipedia.org/wiki/Airy_function).\n\n\nCompute the derivative at $c=-3$ using $h=0.0001$.\n\n::: {.cell execution_count=15}\n\n::: {.cell-output .cell-output-display execution_count=16}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='4643414594074849994' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_4643414594074849994\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"4643414594074849994\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='4643414594074849994_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"4643414594074849994\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 0.3146405891557569) <= 1.0e-6);\n  var msgBox = document.getElementById('4643414594074849994_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_4643414594074849994\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_4643414594074849994\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nLet $f(x) = \\sin(x)$. The slope of the tangent line at $c=\\pi/4$ is well known to have slope $\\sqrt{2}/2$.\n\n\nCompute the forward difference quotient for $f$ at $c$ using $h=0.01$. What is the order of the difference between the two values?\n\n::: {.cell execution_count=16}\n\n::: {.cell-output .cell-output-display execution_count=17}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='13227788893763586419' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_13227788893763586419\">\n        <div style=\"padding-top: 5px\">\n    <div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_13227788893763586419_1\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_13227788893763586419\"\n              id=\"radio_13227788893763586419_1\" value=\"1\">\n      </input>\n      <span class=\"label-body px-1\">\n        3 parts in 100\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_13227788893763586419_2\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_13227788893763586419\"\n              id=\"radio_13227788893763586419_2\" value=\"2\">\n      </input>\n      <span class=\"label-body px-1\">\n        3 parts in 1000\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_13227788893763586419_3\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_13227788893763586419\"\n              id=\"radio_13227788893763586419_3\" value=\"3\">\n      </input>\n      <span class=\"label-body px-1\">\n        3 parts in 10,000\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_13227788893763586419_4\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_13227788893763586419\"\n              id=\"radio_13227788893763586419_4\" value=\"4\">\n      </input>\n      <span class=\"label-body px-1\">\n        3 parts in 100,000\n      </span>\n    </label>\n</div>\n\n    \n        </div>\n      </div>\n      <div id='13227788893763586419_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_13227788893763586419\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 2;\n    var msgBox = document.getElementById('13227788893763586419_message');\n      if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_13227788893763586419\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_13227788893763586419\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nFor the function $f(x) = x^3 - 5x$ use a forward difference quotient with $h=0.0001$ to approximate the slope of the tangent line at $c=1$. Use this value to create a tangent line at `(c, f( c))`. Plot both the function and the tangent. Estimate graphically where the tangent line crosses the $x$ axis. The value is near:\n\n::: {.cell execution_count=17}\n\n::: {.cell-output .cell-output-display execution_count=18}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='6306596730422566161' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_6306596730422566161\">\n        <div style=\"padding-top: 5px\">\n    <div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_6306596730422566161_1\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_6306596730422566161\"\n              id=\"radio_6306596730422566161_1\" value=\"1\">\n      </input>\n      <span class=\"label-body px-1\">\n        -2.0\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_6306596730422566161_2\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_6306596730422566161\"\n              id=\"radio_6306596730422566161_2\" value=\"2\">\n      </input>\n      <span class=\"label-body px-1\">\n        -1.5\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_6306596730422566161_3\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_6306596730422566161\"\n              id=\"radio_6306596730422566161_3\" value=\"3\">\n      </input>\n      <span class=\"label-body px-1\">\n        -1.0\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_6306596730422566161_4\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_6306596730422566161\"\n              id=\"radio_6306596730422566161_4\" value=\"4\">\n      </input>\n      <span class=\"label-body px-1\">\n        -0.5\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_6306596730422566161_5\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_6306596730422566161\"\n              id=\"radio_6306596730422566161_5\" value=\"5\">\n      </input>\n      <span class=\"label-body px-1\">\n        0.0\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_6306596730422566161_6\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_6306596730422566161\"\n              id=\"radio_6306596730422566161_6\" value=\"6\">\n      </input>\n      <span class=\"label-body px-1\">\n        1.0\n      </span>\n    </label>\n</div>\n\n    \n        </div>\n      </div>\n      <div id='6306596730422566161_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_6306596730422566161\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 3;\n    var msgBox = document.getElementById('6306596730422566161_message');\n      if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_6306596730422566161\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_6306596730422566161\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n## Derivative of a function\n\n\nWe might be interested not in the derivative at a point, but in the derivative as a function. This is how we think of the derivative when we say if $f(x) = \\sin(x)$, the $f'(x) = \\cos(x)$.  Mathematically, from this viewpoint, the derivative is referred to as an *operator*, as it takes a function and returns a function.\n\n\nWe can reproduce this behavior easily enough with `julia`, as functions are *first class objects*: they can be passed as arguments and returned as values.\n\n\nFirst, let's define a function to find the derivative at a point using the \"forward difference quotient\":\n\n::: {.cell execution_count=18}\n``` {.julia .cell-code}\nforward_difference(f, x0, h) = (f(x0 + h) - f(x0))/h\n```\n\n::: {.cell-output .cell-output-display execution_count=19}\n```\nforward_difference (generic function with 1 method)\n```\n:::\n:::\n\n\nWe need three arguments of course as we have three ingredients to worry about: the function, the point and the size of $h$.\n\n\nTo make an operator that takes $f$ and returns a function (an anonymous function in this case) that computes our approximation to $f'$ we can do the following:\n\n::: {.cell execution_count=19}\n``` {.julia .cell-code}\nDf(f; h=1e-8) = x -> forward_difference(f, x, h)\n```\n\n::: {.cell-output .cell-output-display execution_count=20}\n```\nDf (generic function with 1 method)\n```\n:::\n:::\n\n\nWe specified a default value of $h$ for convenience, but allow it to be varied if desired.\n\n\nTo see this work, we can find and plot the derivative of $\\sin(x)$:\n\n::: {.cell execution_count=20}\n``` {.julia .cell-code}\nf(x) = sin(x)\nfp(x) = Df(f)(x)\nplot(f, 0, 2pi)\nplot!(fp)\n```\n\n::: {.cell-output .cell-output-display execution_count=21}\n![](derivatives_files/figure-html/cell-21-output-1.svg){}\n:::\n:::\n\n\nWell, we already knew that should just be $\\cos(x)$.  The point is we can easily make the an approximate derivative function from `f` with the definition `fp(x) = Df(f)(x)`.\n\n\n:::{.callout-note}\n## Parsing Df(f)(x)\nSeeing the pair of parenthesis can lead to confusion, as it isn't common math notation. Here parentheses are not used for grouping, but rather function application. There are two function applications and the associativity rules for function application are left to right, as with most ‚Äì but not all ‚Äì operations. So `Df(f)` is done first. This returns a function (the approximate derivative) which is then evaluated at `x`.\n\n:::\n\n:::{.callout-note}\n## Defining `fp` or `fp(x)`\nWe could also have just plotted `f` and `Df(f)` without naming `fp`. As well, could have written `fp = Df(f)`, but that creates `fp` as an *anonymous* function and we then couldn't redefine it through `fp(x) = ...`, which would attempt to make it a *generic* function.\n\n:::\n\nLet's look at a different function, where we don't know in our heads the answer.\n\n::: {.cell execution_count=21}\n``` {.julia .cell-code}\nf(x) = exp(x)/(1 + exp(x))\nplot(f, 0, 5)\nplot!(Df(f))\n```\n\n::: {.cell-output .cell-output-display execution_count=22}\n![](derivatives_files/figure-html/cell-22-output-1.svg){}\n:::\n:::\n\n\nIf we look, we can see from the graph that `f` is increasing and `Df(f)` is positive ‚Äì this is no coincidence, of course.\n\n\n##### Example: Critical points\n\n\nA function's *critical points* are where its derivative is $0$ or undefined. We can examine these by graphing the function's derivative. Let's do so for the polynomial $f(x) = x^3 - 5x + 4$:\n\n::: {.cell execution_count=22}\n``` {.julia .cell-code}\nf(x) = x^3 -5x + 4\nfp(x) = Df(f)(x)\nplot(fp, -5, 5)\n```\n\n::: {.cell-output .cell-output-display execution_count=23}\n![](derivatives_files/figure-html/cell-23-output-1.svg){}\n:::\n:::\n\n\nYou can check the zeroes graphically, say by zooming in a bit and adding the line $y=0$:\n\n::: {.cell execution_count=23}\n``` {.julia .cell-code}\nplot(fp, -2, 2)\nplot!(zero)\n```\n\n::: {.cell-output .cell-output-display execution_count=24}\n![](derivatives_files/figure-html/cell-24-output-1.svg){}\n:::\n:::\n\n\nIf you want, we can find the roots numerically. For example,\n\n::: {.cell execution_count=24}\n``` {.julia .cell-code}\nfind_zeros(fp, -10, 10)\n```\n\n::: {.cell-output .cell-output-display execution_count=25}\n```\n2-element Vector{Float64}:\n -1.290994449095253\n  1.2909944355487426\n```\n:::\n:::\n\n\n##### Example: When is a function increasing?\n\n\nLet $f(x) = \\cos(x)$ over the interval $[0, 360]$ (in degrees). When is the function increasing?\n\n\nFrom the relationship of the derivative and the function, we know the answer is when $f'(x) > 0$. For this example, we can solve this directly as $f'(x) = -\\sin(x)$ and we know when that is positive (well you are supposed to anyways: when the angle is in the third and fourth quadrants). Let's see how we would do this task with `julia` and compare.\n\n\nFirst, we only need the derivative, so we just ask:\n\n::: {.cell execution_count=25}\n``` {.julia .cell-code}\nf(x) = cosd(x)\t\t\t# using degrees\nfp(x) = Df(f)(x)                # use default h\n```\n\n::: {.cell-output .cell-output-display execution_count=26}\n```\nfp (generic function with 1 method)\n```\n:::\n:::\n\n\nThen we wish to indicate on the graph where `fp(x) > 0`. We can do this by defining a function that is $0$ when that is the case and `NaN` otherwise (so that those points are not plotted). We do so below using the `plotif` function from the `MTH229` package\n\n::: {.cell execution_count=26}\n``` {.julia .cell-code}\nplotif(f, fp, 0, 360)  # second color when fp > 0\n```\n\n::: {.cell-output .cell-output-display execution_count=27}\n![](derivatives_files/figure-html/cell-27-output-1.svg){}\n:::\n:::\n\n\n### Practice\n\n\n#### Question\n\n\nLet $f(x) = e^x$. Using a forward difference quotient and $h=0.001$ graph both the function and its approximate derivative over the interval $[0, 3]$. Estimate graphically the largest difference between the function and its approximate derivative.\n\n::: {.cell execution_count=27}\n\n::: {.cell-output .cell-output-display execution_count=28}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='10623006166949380656' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_10623006166949380656\">\n        <div style=\"padding-top: 5px\">\n    <div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_10623006166949380656_1\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_10623006166949380656\"\n              id=\"radio_10623006166949380656_1\" value=\"1\">\n      </input>\n      <span class=\"label-body px-1\">\n        It is about 0.01\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_10623006166949380656_2\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_10623006166949380656\"\n              id=\"radio_10623006166949380656_2\" value=\"2\">\n      </input>\n      <span class=\"label-body px-1\">\n        It is about 0\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_10623006166949380656_3\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_10623006166949380656\"\n              id=\"radio_10623006166949380656_3\" value=\"3\">\n      </input>\n      <span class=\"label-body px-1\">\n        It is about 0.1\n      </span>\n    </label>\n</div>\n\n    \n        </div>\n      </div>\n      <div id='10623006166949380656_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_10623006166949380656\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 1;\n    var msgBox = document.getElementById('10623006166949380656_message');\n      if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_10623006166949380656\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_10623006166949380656\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nLet $f(x) = x^2 \\exp(-x)$. Using $h=0.0001$ and an approximate derivative, estimate graphically where $f'(x)$ is positive on the interval $[0,3]$.\n\n::: {.cell execution_count=28}\n\n::: {.cell-output .cell-output-display execution_count=29}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='4679867299064109466' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_4679867299064109466\">\n        <div style=\"padding-top: 5px\">\n    <div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_4679867299064109466_1\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_4679867299064109466\"\n              id=\"radio_4679867299064109466_1\" value=\"1\">\n      </input>\n      <span class=\"label-body px-1\">\n        It is for the entire interval\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_4679867299064109466_2\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_4679867299064109466\"\n              id=\"radio_4679867299064109466_2\" value=\"2\">\n      </input>\n      <span class=\"label-body px-1\">\n        Between 0 and 2\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_4679867299064109466_3\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_4679867299064109466\"\n              id=\"radio_4679867299064109466_3\" value=\"3\">\n      </input>\n      <span class=\"label-body px-1\">\n        From 0 to about 0.45\n      </span>\n    </label>\n</div>\n\n    \n        </div>\n      </div>\n      <div id='4679867299064109466_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_4679867299064109466\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 2;\n    var msgBox = document.getElementById('4679867299064109466_message');\n      if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_4679867299064109466\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_4679867299064109466\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nThe critical points of a function are where its derivative is undefined or where its derivative is $0$. For the function $f(x) = 3x^4 -28x^3 + 96x^2 - 144x$ graphically find any critical points over the interval $[0,10]$\n\n::: {.cell execution_count=29}\n\n::: {.cell-output .cell-output-display execution_count=30}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='12202960801321619307' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_12202960801321619307\">\n        <div style=\"padding-top: 5px\">\n    <div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_12202960801321619307_1\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_12202960801321619307\"\n              id=\"radio_12202960801321619307_1\" value=\"1\">\n      </input>\n      <span class=\"label-body px-1\">\n        There is one at 3\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_12202960801321619307_2\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_12202960801321619307\"\n              id=\"radio_12202960801321619307_2\" value=\"2\">\n      </input>\n      <span class=\"label-body px-1\">\n        There are two distinct ones: 2, 4.69\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_12202960801321619307_3\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_12202960801321619307\"\n              id=\"radio_12202960801321619307_3\" value=\"3\">\n      </input>\n      <span class=\"label-body px-1\">\n        There are two distinct ones: 2, 3\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_12202960801321619307_4\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_12202960801321619307\"\n              id=\"radio_12202960801321619307_4\" value=\"4\">\n      </input>\n      <span class=\"label-body px-1\">\n        There are two distinct ones: 2, 2.6667\n      </span>\n    </label>\n</div>\n\n    \n        </div>\n      </div>\n      <div id='12202960801321619307_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_12202960801321619307\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 3;\n    var msgBox = document.getElementById('12202960801321619307_message');\n      if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_12202960801321619307\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_12202960801321619307\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n## Improvements to the basic forward difference quotient\n\n\nThe error in the approximation of the derivative depends on the size of $h$. Mathematically, as $h$ gets smaller we get better approximations, though with the computer other complications arise. To see mathematically that this is the case, let's look at the difference between the approximate numeric derivative from the forward difference quotient and a known derivative.\n\n::: {.cell execution_count=30}\n``` {.julia .cell-code}\nf(x) = sin(x)\nfp(x) = cos(x)\n[ Df(f,h=h)(.5) - fp(.5) for h=[.1, .01, .001, .0001, .00001] ]\n```\n\n::: {.cell-output .cell-output-display execution_count=31}\n```\n5-element Vector{Float64}:\n -0.0254132139820491\n -0.0024117340199198978\n -0.00023985901305767499\n -2.3972739644051444e-5\n -2.3971472203898614e-6\n```\n:::\n:::\n\n\nIt gets better as $h$ gets smaller. In fact, it looks like when $h$ gets smaller by a factor of $1/10$ so does the error. Let's look a little deeper though. Rather than type in the values of $h$ as above, let's use an expression to compute them. Here we find the powers $10^{-1}, \\dots, 10^{-16}$ at once and then compute the differences:\n\n::: {.cell execution_count=31}\n``` {.julia .cell-code}\nhs = [(1/10)^i for i in 1:16];\nout = [ Df(f,h=h)(.5) - fp(.5) for h in hs ];\n[hs out]\n```\n\n::: {.cell-output .cell-output-display execution_count=32}\n```\n16√ó2 Matrix{Float64}:\n 0.1      -0.0254132\n 0.01     -0.00241173\n 0.001    -0.000239859\n 0.0001   -2.39727e-5\n 1.0e-5   -2.39715e-6\n 1.0e-6   -2.3969e-7\n 1.0e-7   -2.4695e-8\n 1.0e-8    2.85032e-10\n 1.0e-9    2.85032e-10\n 1.0e-10  -1.10737e-7\n 1.0e-11  -1.22096e-6\n 1.0e-12  -6.77208e-6\n 1.0e-13   4.87391e-5\n 1.0e-14  -0.000506372\n 1.0e-15   0.0105959\n 1.0e-16   0.23264\n```\n:::\n:::\n\n\nWhen we look, we see that for awhile the approximation gets better (to about `1e-9`), but then does a U-turn and starts getting worse. The mathematical approximation gets better and better, but what happens is the computational error gets worse. We'll see below how to pick the $h$ that best balances these off, but first lets look at how using different approximations for the derivative can improve the \"mathematical\" error.\n\n\n### Central difference quotient\n\n\nIt turns out that just by looking to the left and the right we can improve the mathematical error from getting better at a rate of $h$ to a rate of $h^2$, provided our function is smooth enough and we don't have issues on the boundaries. The formula, called the *central difference quotient* approximation to the derivative is:\n\n\n\n$$\nf'(x) \\approx \\frac{ f(x + h) - f(x - h) }{2h}\n$$\n\n\nFor this the mathematical error is like $h^2$, not $h$.\n\n\nLet's compare. To make our life easier we again create some functions, as we did with `Df` above.\n\n::: {.cell execution_count=32}\n``` {.julia .cell-code}\ncentral_difference(f, x0, h) = (f(x0 + h) - f(x0 - h)) / (2h)\nDc(f; h=0.0001) = x -> central_difference(f, x, h)\n```\n\n::: {.cell-output .cell-output-display execution_count=33}\n```\nDc (generic function with 1 method)\n```\n:::\n:::\n\n\nNow to see whether a forward difference quotient or central difference quotient works better. We can do so with a table. Again with $f(x) = \\sin(x)$\n\n::: {.cell execution_count=33}\n``` {.julia .cell-code}\nf(x) = sin(x)\nfp(x) = cos(x)\nusing_D =  [ Df(f,h=h)(.5) - fp(.5) for h in hs ];\nusing_Dc = [ Dc(f,h=h)(.5) - fp(.5) for h in hs ];\n[hs using_D using_Dc]\n```\n\n::: {.cell-output .cell-output-display execution_count=34}\n```\n16√ó3 Matrix{Float64}:\n 0.1      -0.0254132    -0.00146191\n 0.01     -0.00241173   -1.46263e-5\n 0.001    -0.000239859  -1.46264e-7\n 0.0001   -2.39727e-5   -1.46274e-9\n 1.0e-5   -2.39715e-6   -1.75036e-11\n 1.0e-6   -2.3969e-7     7.47635e-12\n 1.0e-7   -2.4695e-8    -2.70079e-10\n 1.0e-8    2.85032e-10   2.85032e-10\n 1.0e-9    2.85032e-10   2.85032e-10\n 1.0e-10  -1.10737e-7   -1.10737e-7\n 1.0e-11  -1.22096e-6   -1.22096e-6\n 1.0e-12  -6.77208e-6   -6.77208e-6\n 1.0e-13   4.87391e-5    4.87391e-5\n 1.0e-14  -0.000506372  -0.000506372\n 1.0e-15   0.0105959     0.0105959\n 1.0e-16   0.23264       0.23264\n```\n:::\n:::\n\n\nThe errors for the central difference quotient are either much smaller for the same size $h$ or the same. We see that we can use a larger $h$ to get the most accuracy in this example.\n\n\n##### Example: When does the tangent line hit 0?\n\n\nLet $f(x) = 10/(1+x^2) - 10\\exp(-(1/2)x^2)$. The tangent line at $x=c$ is given by\n\n\n\n$$\ny = f( c) - f'( c)(x - c)\n$$\n\n\nand this intersects the $x$ axis when $y=0$. Solving this gives:\n\n\n\n$$\nc - f( c)/f'( c)\n$$\n\n\nOur goal is to compute this value for any $c > 0$.\n\n\nDoing so is easy:\n\n::: {.cell execution_count=34}\n``` {.julia .cell-code}\nf(x) = 10/(1+x^2) - 10*exp(-(1/2)*x^2)\nfp(x) = Dc(f)(x)\nintersection_point(c) = c - f(c)/fp(c)\n```\n\n::: {.cell-output .cell-output-display execution_count=35}\n```\nintersection_point (generic function with 1 method)\n```\n:::\n:::\n\n\nFor example, when $c=1$ we have:\n\n::: {.cell execution_count=35}\n``` {.julia .cell-code}\nc = 1;\nintersection_point(c)\n```\n\n::: {.cell-output .cell-output-display execution_count=36}\n```\n2.000000018978514\n```\n:::\n:::\n\n\nYou can tell from the graph of $f(x)$ that this value should be more than 1, as it is.\n\n::: {.cell execution_count=36}\n``` {.julia .cell-code}\nplot(f, .5, 2.1, legend=false)\nplot!(zero)\nplot!(x -> f(c) + fp(c)*(x-c))\n```\n\n::: {.cell-output .cell-output-display execution_count=37}\n![](derivatives_files/figure-html/cell-37-output-1.svg){}\n:::\n:::\n\n\n---\n\n\nWe could have defined `intersection_point` to accept a function with:\n\n\n```\nintersection_point(f, c) = c  - f(c)/Dc(f)(c)\n```\n\nThen it could easily be reused for other problems.\n\n\n### Practice\n\n\n#### Question\n\n\nLet\n\n\n```\nf(x) = besselj(1, x)\n```\n\nThis defines $f$ as a Bessel function of the first kind with order $\\alpha=1$. Plot the approximate derivative over the interval $[0,5]$. There is one zero. What is its approximate value:\n\n::: {.cell execution_count=37}\n\n::: {.cell-output .cell-output-display execution_count=38}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='16339620913137977017' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_16339620913137977017\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"16339620913137977017\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='16339620913137977017_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"16339620913137977017\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 1.8411837814875183) <= 0.1);\n  var msgBox = document.getElementById('16339620913137977017_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_16339620913137977017\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_16339620913137977017\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nLet $f(x) = \\sin(\\cos(x))$. Plot the approximate derivative of $f$. How many zeros are there between $5$ and $20$?\n\n::: {.cell execution_count=38}\n\n::: {.cell-output .cell-output-display execution_count=39}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='12663581076036335071' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_12663581076036335071\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"12663581076036335071\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='12663581076036335071_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"12663581076036335071\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 5) <= 1.0e-10);\n  var msgBox = document.getElementById('12663581076036335071_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_12663581076036335071\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_12663581076036335071\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nLet $f(x) = |x^2 - 2|$. Plot the derivative of $f(x)$ over the interval $[-2,2]$. How many critical points do you see? (A critical point is where the derivative is $0$ *or* undefined.)\n\n::: {.cell execution_count=39}\n\n::: {.cell-output .cell-output-display execution_count=40}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='694729821560992300' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_694729821560992300\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"694729821560992300\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='694729821560992300_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"694729821560992300\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 3) <= 1.0e-10);\n  var msgBox = document.getElementById('694729821560992300_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_694729821560992300\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_694729821560992300\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n## Automatic differentiation\n\n\nWe discuss now [Forward Mode Automatic Differentiation](http://en.wikipedia.org/wiki/Automatic_differentiation).\n\n\nAutomatic differentiation avoids the numeric instability issues of finite difference quotients by using a different approach. Whereas finite difference quotientss have a long history, automatic differentiation only dates back to the 50s.\n\n\nThe `ForwardDiff` package implements automatic differentiation.\n\n\nThe `MTH229` package overloads the idea of `'`, so uses automatic differentiation when the notation `f'` is encountered.\n\n\nThat means, we can find derivatives, as familiarly as:\n\n::: {.cell execution_count=40}\n``` {.julia .cell-code}\nf(x) = x^x\nf'(1)\n```\n\n::: {.cell-output .cell-output-display execution_count=41}\n```\n1.0\n```\n:::\n:::\n\n\nHere `f` is a  function, `f'` is a derived function, and `f'(1)` is this derived function evaluated at `1` ‚Äì just as with the use within a math text book.\n\n\nUnlike, finite difference quotients automatic differentiation does not have issues arising from the loss of precision encountered when subtracting two like-sized numbers. Unlike symbolic derivatives (such as those found by the Wolfram Alpha website used by your iPhone's Siri) they can be computed quickly, even if the computations defining the function involve many steps.\n\n\nSo what is automatic differentiation? The idea of the forward mode is quite intuitive. The *tangent line* approximation of a function at the point $c$ becomes\n\n\n\n$$\nf(x) = f(c) + f'( c)(x-c) + O((x-c)^2)\n$$\n\n\nWhere the notation $O(x-c)^2$ means that the last term is not precisely spelled out, but is like some constant times the difference $(x-c)^2$. This has many applications, but for this one it reduces the knowledge of the function values at this level to two values $(f(c), f'(c))$\n\n\nNow consider the product of two functions $f(x)$ and $g(x)$? The above formula applied to $f \\cdot g$ is:\n\n\n\n$$\n(f\\cdot g)(x) = f(c) \\cdot g(c) + (f'( c)g( c) + f( c)g'( c))(x-c) + O((x-c)^2)\n$$\n\n\nThis follows by the product rule. Again we have that two values determine the product $f\\cdot g$ at this level, these being $(f(c) \\cdot g(c)$, and $f'( c)g( c) + f( c)g'( c)$. *But*, this combination can be made from the values $(f(c), f'(c))$ and $(g(c), g'(c))$ which represent $f$ and $g$. Hence it is enough to know the two values for $f$ and $g$ to compute the two values for $f\\cdot g$.\n\n\nIn fact, the rules of derivatives allow us to say the same for addition, subtraction, multiplication, division, powers *and* composition. For composition this is from the chain rule:\n\n\n\n$$\n(f \\circ g)(x) = (f \\circ g)(c) + f'( g(c)) g'(c) (x-c) + O((x-c)^2).\n$$\n\n\nAutomatic differentiation can be implemented by extending how we store a value, storing both $(x, dx)$ as above.  With this, the rules of differentials inform us how we combine these values. For example:\n\n\n  * $$\n    (x, dx) + (y, dy) = (x + y, d(x+y)) = (x + y, 1dx +  1dy)\n    $$\n  * $$\n    (x, dx) \\cdot (y, dy) = (xy, d(xy)) = (xy, y dx + x dy)\n    $$\n  * $$\n    (x, dx)^n = (x^n, d(x^n)) = (x^n, n x^{n-1} dx)\n    $$\n\n\netc.\n\n\nFor functions we need to use the chain rule:\n\n\n  * $$\n    f((x, dx)) = (f(x), d(f(x))) = (f(x), f'(x) dx )\n    $$\n\n\n### Examples\n\n\nUsing `'`, we see that plotting a function and its derivative is straightforward:\n\n::: {.cell execution_count=41}\n``` {.julia .cell-code}\nf(x) = exp(-x)*sin(x)\nplot(f, 0, 2pi)\nplot!(f')\n```\n\n::: {.cell-output .cell-output-display execution_count=42}\n![](derivatives_files/figure-html/cell-42-output-1.svg){}\n:::\n:::\n\n\nSecond derivatives are also available:\n\n::: {.cell execution_count=42}\n``` {.julia .cell-code}\nf(x) = x^2 - 2x\nplot(f, -2, 2)\nplot!(f')\nplot!(f'')\n```\n\n::: {.cell-output .cell-output-display execution_count=43}\n![](derivatives_files/figure-html/cell-43-output-1.svg){}\n:::\n:::\n\n\nHere is an example where we plot the tangent line and the function. The `MTH229` package provides this function to compute a tangent line function:\n\n``` {.julia .cell-code}\ntangent(f, c) = x -> f(c) + f'(c)*(x-c)\n```\n\n\nThis is employed as follows:\n\n::: {.cell execution_count=44}\n``` {.julia .cell-code}\nf(x) = x^x\nc = 1\nplot(f, 1/2, 2)\nplot!(tangent(f, c))\n```\n\n::: {.cell-output .cell-output-display execution_count=44}\n![](derivatives_files/figure-html/cell-45-output-1.svg){}\n:::\n:::\n\n\n---\n\n##### Example: AP Calculus question\n\n\nThe 2014 AP Calculus exam included this question:\n\n\nGrass clippings are placed in a bin, where they decompose. For $0 \\leq t \\leq 30$, the amount of grass clippings remaining in the bin is modeled by $A(t) = 6.687(0.931)^t$. Where $A(t)$ is measured in pounds and $t$ is measured in days.\n\n\n  * Find the average rate of change of $A(t)$ over the interval of $0 \\leq t \\leq 30$. Indicate units of measure.\n  * Find the value of $A'(15)$. Using correct units, interpret the meaning of the value in the context of the problem.\n  * Find the time $t$ for which the amount of grass clippings in the bin is equal to the average amount of grass clippings in the bin over the interval $0 \\leq t \\leq 30$.\n  * For $t > 30$, $L(t)$, the linear approximation to $A$ at $t=30$ is a better model for the amount of grass clippings remaining in the bin. Use $L(t)$ to predict the time at which there will be 0.5% pound of grass clippings remaining in the bin. Show the work that leads to your answer.\n\n\nWe can do all this relatively quickly with the `find_zero` function from the `Roots` package.\n\n\nFirst, we define $A(t)$:\n\n::: {.cell execution_count=45}\n``` {.julia .cell-code}\nA(t) = 6.687 * (0.931)^t\n```\n\n::: {.cell-output .cell-output-display execution_count=45}\n```\nA (generic function with 1 method)\n```\n:::\n:::\n\n\nThe first question is answered by the slope of the secant line connecting $(0,A(0))$ and $(30, A(30))$:\n\n::: {.cell execution_count=46}\n``` {.julia .cell-code}\nm = (A(30) - A(0)) / (30 - 0)\n```\n\n::: {.cell-output .cell-output-display execution_count=46}\n```\n-0.1968024043540685\n```\n:::\n:::\n\n\nThe units are in pounds per day.\n\n\nThe second question is done through the derivative, as follows:\n\n::: {.cell execution_count=47}\n``` {.julia .cell-code}\nA'(15)\n```\n\n::: {.cell-output .cell-output-display execution_count=47}\n```\n-0.1635905803884566\n```\n:::\n:::\n\n\nThis also has units in pounds per day. This is the instantaneous rate of decomposition, and is less (in absolute value) than the average decay rate.\n\n\nThe mean value theorem tells us that there is at least one time where the instantaneous decomposition rate equals the average rate over the interval $[0,30]$. Thus the endpoints form a bracketing interval for the equation $A'(t) = m$, which we solve with:\n\n::: {.cell execution_count=48}\n``` {.julia .cell-code}\nfind_zero(t -> A'(t) - m, (0, 30))\n```\n\n::: {.cell-output .cell-output-display execution_count=48}\n```\n12.414773526372592\n```\n:::\n:::\n\n\nSo at 12.4 days, the instantaneous rate is equal to the average rate of decomposition over the first 30 days.\n\n\nBut this doesn't really answer the question asked, which is about the average amount of grass clippings in the bin. For this we need the integral form of the mean value theorem. Skipping ahead a few lessons to solve this problem, we have:\n\n::: {.cell execution_count=49}\n``` {.julia .cell-code}\na, err = quadgk(A, 0, 30)\t# area under A from 0,30\navg = a/(30-0)\nfind_zero(t -> A(t) - avg, (0, 30))\n```\n\n::: {.cell-output .cell-output-display execution_count=49}\n```\n12.414773526372596\n```\n:::\n:::\n\n\nWe get the same answer ‚Äì think about whether that is a coincidence.\n\n\nFinally, we can define $L(t)$ using the point-slope form of the line. The point is $(30, A(30))$ and the slope is $A'(30)$:\n\n::: {.cell execution_count=50}\n``` {.julia .cell-code}\nL(t) = A(30) + A'(30) * (t - 30) # t > 30\n```\n\n::: {.cell-output .cell-output-display execution_count=50}\n```\nL (generic function with 1 method)\n```\n:::\n:::\n\n\nWe could restrict $L$ to insist that $t > 30$, but this isn't necessary. We are asked to solve this. Using `find_zero` requires a bracket. We check that $L(30) > 0.5$ and that $L(100)$ is negative:\n\n::: {.cell execution_count=51}\n``` {.julia .cell-code}\nL(30), L(100)\n```\n\n::: {.cell-output .cell-output-display execution_count=51}\n```\n(0.7829278693779448, -3.135406990501517)\n```\n:::\n:::\n\n\nSo, we can use $[30, 100]$ as a bracket for $L(t) - 0.5 = 0$:\n\n::: {.cell execution_count=52}\n``` {.julia .cell-code}\nfind_zero(t -> L(t) - 0.5, (30, 100))\n```\n\n::: {.cell-output .cell-output-display execution_count=52}\n```\n35.054430405946825\n```\n:::\n:::\n\n\nSo a bit over 35 days to decompose to half a pound.\n\n\nHere is a picture, showing the decay:\n\n::: {.cell execution_count=53}\n``` {.julia .cell-code}\nf(t) = t <= 30 ? A(t) : L(t)\nplot(f, 0, 40)\n```\n\n::: {.cell-output .cell-output-display execution_count=53}\n![](derivatives_files/figure-html/cell-54-output-1.svg){}\n:::\n:::\n\n\n### Practice\n\n\n#### Question\n\n\nWhich definition would be right for  $(x,dx) - (y, dy)$?\n\n::: {.cell execution_count=54}\n\n::: {.cell-output .cell-output-display execution_count=54}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='13952321580840446616' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_13952321580840446616\">\n        <div style=\"padding-top: 5px\">\n    <div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_13952321580840446616_1\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_13952321580840446616\"\n              id=\"radio_13952321580840446616_1\" value=\"1\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>&#40;x - dx, y -dy&#41;</code>\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_13952321580840446616_2\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_13952321580840446616\"\n              id=\"radio_13952321580840446616_2\" value=\"2\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>&#40;x - y, dx - y&#41;</code>\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_13952321580840446616_3\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_13952321580840446616\"\n              id=\"radio_13952321580840446616_3\" value=\"3\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>&#40;x-y, dx - dy&#41;</code>\n      </span>\n    </label>\n</div>\n\n    \n        </div>\n      </div>\n      <div id='13952321580840446616_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_13952321580840446616\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 3;\n    var msgBox = document.getElementById('13952321580840446616_message');\n      if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_13952321580840446616\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_13952321580840446616\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n#### Question: find tangent line intersection\n\n\nRedefine `intersection_point` as:\n\n::: {.cell execution_count=55}\n``` {.julia .cell-code}\nintersection_point(f, c) = c - f(c)/f'(c)\n```\n\n::: {.cell-output .cell-output-display execution_count=55}\n```\nintersection_point (generic function with 2 methods)\n```\n:::\n:::\n\n\nNow for $f(x) = 10/(1+x^2) - 10 \\cdot \\exp(-(1/2) \\cdot x^2)$ and $c=1$ find the intersection point.\n\n::: {.cell execution_count=56}\n\n::: {.cell-output .cell-output-display execution_count=56}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='13755307402830314084' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_13755307402830314084\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"13755307402830314084\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='13755307402830314084_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"13755307402830314084\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 2) <= 0.0001);\n  var msgBox = document.getElementById('13755307402830314084_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_13755307402830314084\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_13755307402830314084\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n#### Question: what is the size of the error?\n\n\nWe can compare the error at many different points with the following construct\n\n``` {.julia .cell-code}\nf(x) = exp(-x)*sin(x)\nfp(x) = exp(-x)*(cos(x) - sin(x))\n[abs(f'(x) - fp(x) ) for x in range(0, pi, 25)]\n```\n\n\nWhat is the order (exponent) of the largest difference above?\n\n::: {.cell execution_count=58}\n\n::: {.cell-output .cell-output-display execution_count=57}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='17165763915659807228' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_17165763915659807228\">\n        <div style=\"padding-top: 5px\">\n    <div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_17165763915659807228_1\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_17165763915659807228\"\n              id=\"radio_17165763915659807228_1\" value=\"1\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>1e-14</code>\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_17165763915659807228_2\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_17165763915659807228\"\n              id=\"radio_17165763915659807228_2\" value=\"2\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>1e-17</code>\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_17165763915659807228_3\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_17165763915659807228\"\n              id=\"radio_17165763915659807228_3\" value=\"3\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>1e-10</code>\n      </span>\n    </label>\n</div>\n\n    \n        </div>\n      </div>\n      <div id='17165763915659807228_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_17165763915659807228\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 2;\n    var msgBox = document.getElementById('17165763915659807228_message');\n      if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_17165763915659807228\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_17165763915659807228\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n## Error analysis\n\n\nWe end with a digression on how big `h` should be to have the approximate derivatives as close as can be.\n\n\nThe choice of $h$ in the derivative approximations above was done somewhat arbitrarily, with only the intuition that smaller $h$'s should produce more accurate approximations (which of course may be way off, as we are subtracting like-sized values in the derivative formula). Here we look a bit more closely at how to choose $h$.\n\n\nAs mentioned, with a bit of work from the second semester of calculus one can learn that the *mathematical error* in the forward difference quotient is \"order $h$\" whereas the mathematical error in the central difference quotient is \"order $h^2$. This means that as $h$ gets small the approximation error in the first is a multple of $h$, but for the second a multiple of $h^2$ ‚Äì a much smaller error in general.\n\n\nHowever there is also error due to *floating point approximation*. Such error is different in that it gets bigger as $h$ gets smaller. So one error gets bigger, the other gets smaller. So clearly if $h$ gets too small, the floating point error will dominate and the overall error will not get smaller, rather larger.\n\n\nSo, how big is the floating point error? For any given number, it can be roughly as big as the the machine precision amount, $\\epsilon$. So in the forward-difference quotient approximation we could have errors in both terms $f(x+h)$ and $f(x)$ so the total error could be as big as $2\\epsilon$. But this is divided by $h$ as we have:\n\n\n\n$$\n\\frac{f(x+h) - f(x)}{h} = \\frac{float(f(x +h)) + \\epsilon - float(f(x_) + \\epsilon}{h} =\n\t     \\frac{float(f(x+h))-float(f(x))}{h} + \\frac{2\\epsilon}{h}.\n$$\n\n\nThe errors may or *may not* cancel so the algebra with $\\epsilon$ is unusual to the untrained eye. It basically takes into account the worse case.\n\n\nThe key is the $2\\epsilon/h$ term ‚Äì it gets bigger as $h$ gets smaller.\n\n\nSo if each floating point approximation is no more off than $\\epsilon$, we have this bound on the error:\n\n\n\n$$\n\\text{error} \\leq \\frac{2\\epsilon}{h} + (M/2)h\n$$\n\n\nWhere $M$ is a constant that depends on the maximum absolute value of the second derivative and the $1/2$ comes from second semester calculus. Choosing $h$ to make this as small as possible is possible with some calculus involving the derivative, but for now we simply note the answer is $h=((2\\epsilon)/(M/2))^{1/2}$.\n\n\nTaking $\\epsilon$ as machine tolerance and (conveniently) $M=1$ we get\n\n\n\n$$\nh_{min} = \\sqrt((2\\epsilon)/(1/2)) \\approx 10^{-8}\n$$\n\n\nOr more precisely:\n\n::: {.cell execution_count=59}\n``` {.julia .cell-code}\nsqrt( (2*eps())/(1/2) )\n```\n\n::: {.cell-output .cell-output-display execution_count=58}\n```\n2.9802322387695312e-8\n```\n:::\n:::\n\n\nWe can check this is about right,but graphing on a different scale:\n\n::: {.cell execution_count=60}\n``` {.julia .cell-code}\nf(h; M=1) = 2*eps()/h + (M/2)*h\ng(x) = log10(f(10.0^(-x)))\nplot(g, 1, 10)\t\t\t# min near 8, which means h like 1e-8\n```\n\n::: {.cell-output .cell-output-display execution_count=59}\n![](derivatives_files/figure-html/cell-61-output-1.svg){}\n:::\n:::\n\n\nNumerically, we can check how this basically works for some test function:\n\n::: {.cell execution_count=61}\n``` {.julia .cell-code}\nf(x) = exp(x) - x^3\nfp(x) = exp(x) - 3x^2\n[hs [Df(f,h=h)(.5) - fp(.5) for h in hs] ]\n```\n\n::: {.cell-output .cell-output-display execution_count=60}\n```\n16√ó2 Matrix{Float64}:\n 0.1      -0.074746\n 0.01     -0.00682885\n 0.001    -0.000676365\n 0.0001   -6.75712e-5\n 1.0e-5   -6.75649e-6\n 1.0e-6   -6.75645e-7\n 1.0e-7   -6.65768e-8\n 1.0e-8    4.47752e-9\n 1.0e-9   -1.73158e-7\n 1.0e-10  -1.73158e-7\n 1.0e-11   4.26773e-6\n 1.0e-12  -0.000106755\n 1.0e-13   0.000559379\n 1.0e-14  -0.0105429\n 1.0e-15  -0.0105429\n 1.0e-16   1.32172\n```\n:::\n:::\n\n\nWe see the best case is around $h=10^{-8}$, as expected by the theory.\n\n\n### Approximation errors for the central difference quotient\n\n\nFor the central difference quotient, the errors are different. The error in $h$ becomes:\n\n\n\n$$\n\\text{error} \\leq (2\\epsilon)/(2h) + (M/6) h^2\n$$\n\n\nThis gives $(3\\epsilon/M)^{1/3}$ as the choice for $h$ that minimizes the right-hand expression.\n\n\nTaking $\\epsilon$ as the machine tolerance and (conveniently) $M=3$ we get\n\n\n\n$$\nh_{min} \\approx 10^{-6}\n$$\n\n\nWe can again check how this works for our function and point:\n\n::: {.cell execution_count=62}\n``` {.julia .cell-code}\n[hs [ Dc(f,h=h)(.5) - fp(.5) for h in hs] ]\n```\n\n::: {.cell-output .cell-output-display execution_count=61}\n```\n16√ó2 Matrix{Float64}:\n 0.1      -0.00725076\n 0.01     -7.25212e-5\n 0.001    -7.25213e-7\n 0.0001   -7.2531e-9\n 1.0e-5   -8.54954e-11\n 1.0e-6    3.6629e-11\n 1.0e-7    3.6629e-11\n 1.0e-8    4.47752e-9\n 1.0e-9   -6.21359e-8\n 1.0e-10  -1.73158e-7\n 1.0e-11   4.26773e-6\n 1.0e-12  -0.000106755\n 1.0e-13   0.000559379\n 1.0e-14  -0.0105429\n 1.0e-15   0.100479\n 1.0e-16   1.32172\n```\n:::\n:::\n\n\n### Practice\n\n\n#### Question: best depends on the function and value\n\n\nA subtle point above is that we are minimizing an upper bound in $h$ with an assumption, not the actual error. The actual answer may differ as it depends on a function and the point of evaluation. Look at the function $f(x) = x^2 - 2x$ and compare the values at $0.5$ as above:\n\n::: {.cell execution_count=63}\n``` {.julia .cell-code}\nhs = [(1/10)^i for i in 1:16]\nf(x) = x^2 - 2x\nfp(x) = 2x - 2\n[hs [Dc(f,h=h)(.5) - fp(.5) for h in hs] ]\n```\n\n::: {.cell-output .cell-output-display execution_count=62}\n```\n16√ó2 Matrix{Float64}:\n 0.1       2.22045e-16\n 0.01     -6.66134e-16\n 0.001    -6.66134e-16\n 0.0001    1.10356e-13\n 1.0e-5   -9.99867e-13\n 1.0e-6   -2.87552e-11\n 1.0e-7   -2.87552e-11\n 1.0e-8   -5.02476e-9\n 1.0e-9   -2.72292e-8\n 1.0e-10  -8.27404e-8\n 1.0e-11  -8.27404e-8\n 1.0e-12   2.21217e-5\n 1.0e-13   0.000244166\n 1.0e-14   0.000799278\n 1.0e-15   0.000799278\n 1.0e-16  -0.110223\n```\n:::\n:::\n\n\nWhat is the best value of $h$?\n\n\nFor which of these values of $h$ is the error smallest?\n\n::: {.cell execution_count=64}\n\n::: {.cell-output .cell-output-display execution_count=63}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='13601781224337686124' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_13601781224337686124\">\n        <div style=\"padding-top: 5px\">\n    <div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_13601781224337686124_1\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_13601781224337686124\"\n              id=\"radio_13601781224337686124_1\" value=\"1\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>1e-3</code>\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_13601781224337686124_2\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_13601781224337686124\"\n              id=\"radio_13601781224337686124_2\" value=\"2\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>1e-6</code>\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_13601781224337686124_3\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_13601781224337686124\"\n              id=\"radio_13601781224337686124_3\" value=\"3\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>1e-8</code>\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_13601781224337686124_4\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_13601781224337686124\"\n              id=\"radio_13601781224337686124_4\" value=\"4\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>1e-12</code>\n      </span>\n    </label>\n</div>\n\n    \n        </div>\n      </div>\n      <div id='13601781224337686124_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_13601781224337686124\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 1;\n    var msgBox = document.getElementById('13601781224337686124_message');\n      if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_13601781224337686124\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_13601781224337686124\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n#### Question: error analysis\n\n\nConsider these commands:\n\n``` {.julia .cell-code}\nf(x) = sin(x)\nfp(x) = cos(x)\n[hs [ Dc(f,h=h)(.5) - fp(.5) for h in hs] ]\n```\n\n\nDo they show the smallest error around $10^{-6}$ as expected?\n\n::: {.cell execution_count=66}\n\n::: {.cell-output .cell-output-display execution_count=64}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='5535734836051531611' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_5535734836051531611\">\n        <div style=\"padding-top: 5px\">\n    <div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_5535734836051531611_1\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_5535734836051531611\"\n              id=\"radio_5535734836051531611_1\" value=\"1\">\n      </input>\n      <span class=\"label-body px-1\">\n        true\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_5535734836051531611_2\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_5535734836051531611\"\n              id=\"radio_5535734836051531611_2\" value=\"2\">\n      </input>\n      <span class=\"label-body px-1\">\n        false\n      </span>\n    </label>\n</div>\n\n    \n        </div>\n      </div>\n      <div id='5535734836051531611_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_5535734836051531611\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 1;\n    var msgBox = document.getElementById('5535734836051531611_message');\n      if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_5535734836051531611\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_5535734836051531611\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "derivatives_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}