{
  "hash": "023727fe611c52c3cc71285b98aefc11",
  "result": {
    "markdown": "# Numeric integration with Julia\n\n\n\n<br/>\nA notebook for this material:\n[ipynb](https://raw.githubusercontent.com/mth229/229-projects/master/10-integration.ipynb)\n[(Pluto html)](./229-projects/10-integration.html)\n[(With commentary)](./229-projects/10-integration-pluto-commentary.html)\n\n\n## Introduction\n\n\nLet $f(x)$ be some non-negative, continuous function over the interval $[a,b]$. The area under the graph of $f(x)$ is given by the definite integral:\n\n\n\n$$\n\\text{Area under f} = \\int_a^b f(x) dx\n$$\n\n\nComputing this area is *often* made easier with the Fundamental Theorem of Calculus which states in one form that one can compute a definite integral through knowledge of an antiderivative. In particular, if $F(x)$ is an antiderivative for $f(x)$, a continuous function, then\n\n\n\n$$\n\\int_a^b f(x) dx = F(b) - F(a).\n$$\n\n\nThis is great as long as some antiderivative is known. There are several different techniques for finding antiderivatives. The `integrate` function in the `SymPy` package can do many of them:\n\n``` {.julia .cell-code}\nusing MTH229\nusing Plots\n```\n\n\n\n\n::: {.cell execution_count=4}\n``` {.julia .cell-code}\nf(x) = x^3 - cos(x) + x*log(x)\n@syms x\nintegrate(f(x), x)\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<span class=\"math-left-align\" style=\"padding-left: 4px; width:0; float:left;\"> \n\\[\n\\frac{x^{4}}{4} + \\frac{x^{2} \\log{\\left(x \\right)}}{2} - \\frac{x^{2}}{4} - \\sin{\\left(x \\right)}\n\\]\n</span>\n```\n:::\n:::\n\n\nTo find the definite integral, say from $1$ to $10$ we have:\n\n::: {.cell execution_count=5}\n``` {.julia .cell-code}\nintegrate(f(x), (x, 1, 10))\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```{=html}\n<span class=\"math-left-align\" style=\"padding-left: 4px; width:0; float:left;\"> \n\\[\n- \\sin{\\left(10 \\right)} + \\sin{\\left(1 \\right)} + 50 \\log{\\left(10 \\right)} + 2475\n\\]\n</span>\n```\n:::\n:::\n\n\nIf all functions had antiderivatives that could be found symbolically, there wouldn't be much more to say.  However, it is a fact of life that not all nice functions will have an antiderivative in a convenient form. A test for such functions is provided in [Risch's algorithm](http://en.wikipedia.org/wiki/Risch_algorithm). In cases where no workable antiderivative is available, the above approach is of no help. Rather, to find the area one can turn to numeric approximations that progressively get better as more approximations are taken.\n\n\nOne such approximation is given by the familiar Riemann sums, which we will look at here. However, the problem of trying to find the area of geometric figures did not start with Riemann some 150 years ago, indeed it has a much longer history.  In the time of Pythagorus the idea of calculating area was one of being able to construct a square of equal area to a figure. This was known as *quadrature*.  Finding such answers for figures bounded by curves was difficult, though [Archimedes](http://en.wikipedia.org/wiki/The_Quadrature_of_the_Parabola) effectively computed the area under $f(x) = x^2$ about 2,000 years before Riemann sums using triangles, not rectangles to approximate the area.  By medieval Europe, the term *quadrature* evolved to be the computation of an area by any means. For example, [Galileo and Roberval](http://en.wikipedia.org/wiki/Quadrature_(mathematics)) found the area bounded by a cycloid arch. Along the way, other approximations were used.  We will see those due to Simpson and Gauss, both predating Riemann.\n\n\n## Riemann sums\n\n\nIn 1854 Riemann was the first to give a rigorous definition of the integral of a continuous function on a closed interval, the problem we wish to solve here, using the concept of a *Riemann sum*. A Riemann sum is one of the simplest to understand approximations to the area under a curve. The basic idea is that the interval $[a,b]$ is partitioned through points $a = x_0 < x_1 < \\cdots x_n = b$ and the area under $f(x)$ between $x_i$ and $x_{i+1}$ is approximated by a rectangle with the base $x_{i+1} - x_i$ and height given by $f(x_i^*)$, where $x_i^*$ is some point in the interval $[x_i, x_{i+1}]$. Typical choices are the left point or the right point of the interval, or the $x$ value which minizes or maximizes $f$ over the interval. The figure shows these four choices for some sample function. For a *Riemann integrable* function, such as a continuous function on $[a,b]$, any of the choices will yield the same value as the partition's mesh shrinks to $0$.\n\n\n![Riemann](figures/integration/riemann_choice.png)\n\n\nAs with other limits, we can numerically approximate the limit by computing the Riemann sum for some partition. The steps for this include:\n\n\n  * creating a partition of $[a,b]$. We will use evenly spaced points for convenience.\n  * Selecting the $x_i^*$ within the partition\n  * Computing the values $f(x_i^*)(x_{i+1} - x_i)$ for each $i$\n  * adding these values up\n\n\nIf we partition $[a,b]$ into $n$ same sized intervals, then each has length $\\delta = (b-a)/n$ and so the points are separated by this amount. As such, we can choose our $a = x_0 < x_1 < \\dots < x_n = b$ with commands like:\n\n::: {.cell execution_count=6}\n``` {.julia .cell-code}\na, b, n = 1, 3, 5;\ndelta = (b-a)/n;\nxs = a .+ (0:n) * delta\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\n1.0:0.4:3.0\n```\n:::\n:::\n\n\nTo apply a function to a range of values, we may use a map, a comprehension, a `for` loop or the \"dot\" notation. We will use broadcasting here. Recall, the syntax:\n\n::: {.cell execution_count=7}\n``` {.julia .cell-code}\nf(x) = x^2\nfxs = f.(xs)\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```\n6-element Vector{Float64}:\n 1.0\n 1.9599999999999997\n 3.24\n 4.840000000000001\n 6.760000000000001\n 9.0\n```\n:::\n:::\n\n\nNow to add the numbers up. For this task, the `sum` function is available\n\n::: {.cell execution_count=8}\n``` {.julia .cell-code}\nsum(fxs)\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```\n26.8\n```\n:::\n:::\n\n\nOkay, just one subtlety, we really only want the points\n\n::: {.cell execution_count=9}\n``` {.julia .cell-code}\n[ a .+ (0:n-1) * delta ]\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\n1-element Vector{StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}:\n 1.0:0.4:2.6\n```\n:::\n:::\n\n\nfor the left Riemann sum and the points\n\n::: {.cell execution_count=10}\n``` {.julia .cell-code}\n[ a .+ (1:n) * delta ]\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```\n1-element Vector{StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}:\n 1.4:0.4:3.0\n```\n:::\n:::\n\n\nfor the right.\n\n\nPutting this together, here are commands to approximate the area under the curve $f(x)=x^2$ using 10 left Riemann sums:\n\n::: {.cell execution_count=11}\n``` {.julia .cell-code}\nf(x) = x^2\na, b, n = 1, 3, 10;\t\t   ## note n=10\ndelta = (b - a)/n;\t\t   ## nothing to change below here\nxs = a .+ (0:n-1) * delta;          ## n, right is 1:n * delta\nfxs = f.(xs);\nsum(fxs) * delta\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```\n7.88\n```\n:::\n:::\n\n\nWe compare this value to the known value from the Fundamental Theorem of Calculus, as $F(x) = x^3/3$ is an antiderivative:\n\n::: {.cell execution_count=12}\n``` {.julia .cell-code}\nF(x) = x^3/3\nF(b) - F(a)\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```\n8.666666666666666\n```\n:::\n:::\n\n\nBoy, not too close. We need a better approximation of course. This can be achieved by using larger values for `n`.\n\n\n### Practice\n\n\n#### Question\n\n\nRepeat with n=100\n\n\nFor the same problem, let $n=100$. What do you get?\n\n::: {.cell execution_count=13}\n\n::: {.cell-output .cell-output-display execution_count=14}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='17707265258685828036' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_17707265258685828036\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"17707265258685828036\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='17707265258685828036_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"17707265258685828036\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 8.5868) <= 0.0001);\n  var msgBox = document.getElementById('17707265258685828036_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_17707265258685828036\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_17707265258685828036\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nRepeat with n=1,000\n\n\nFor the same problem, let $n=1000$. What do you get?\n\n::: {.cell execution_count=14}\n\n::: {.cell-output .cell-output-display execution_count=15}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='13829756658658759022' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_13829756658658759022\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"13829756658658759022\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='13829756658658759022_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"13829756658658759022\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 8.658668) <= 0.0001);\n  var msgBox = document.getElementById('13829756658658759022_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_13829756658658759022\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_13829756658658759022\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nRepeat with n=10,000\n\n\nFor the same problem, let $n=10,000$. is the difference between the answer and the actual answer within $0.001$?\n\n::: {.cell execution_count=15}\n\n::: {.cell-output .cell-output-display execution_count=16}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='12770685650567411050' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_12770685650567411050\">\n        <div style=\"padding-top: 5px\">\n    <div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_12770685650567411050_1\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_12770685650567411050\"\n              id=\"radio_12770685650567411050_1\" value=\"1\">\n      </input>\n      <span class=\"label-body px-1\">\n        true\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_12770685650567411050_2\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_12770685650567411050\"\n              id=\"radio_12770685650567411050_2\" value=\"2\">\n      </input>\n      <span class=\"label-body px-1\">\n        false\n      </span>\n    </label>\n</div>\n\n    \n        </div>\n      </div>\n      <div id='12770685650567411050_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_12770685650567411050\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 1;\n    var msgBox = document.getElementById('12770685650567411050_message');\n      if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_12770685650567411050\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_12770685650567411050\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nHow big should n be? (Strang)\n\n\nLet $f(x) = (10 + \\cos(2\\pi x))^{-1}$. For the integral over $[0,1]$, the known answer is $1/\\sqrt{99}$. How big must $n$ be so that the error in the Riemann sum is less than $10^{-8}$?\n\n::: {.cell execution_count=16}\n\n::: {.cell-output .cell-output-display execution_count=17}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='13296634337792332684' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_13296634337792332684\">\n        <div style=\"padding-top: 5px\">\n    <div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_13296634337792332684_1\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_13296634337792332684\"\n              id=\"radio_13296634337792332684_1\" value=\"1\">\n      </input>\n      <span class=\"label-body px-1\">\n        5\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_13296634337792332684_2\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_13296634337792332684\"\n              id=\"radio_13296634337792332684_2\" value=\"2\">\n      </input>\n      <span class=\"label-body px-1\">\n        1000\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_13296634337792332684_3\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_13296634337792332684\"\n              id=\"radio_13296634337792332684_3\" value=\"3\">\n      </input>\n      <span class=\"label-body px-1\">\n        10\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_13296634337792332684_4\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_13296634337792332684\"\n              id=\"radio_13296634337792332684_4\" value=\"4\">\n      </input>\n      <span class=\"label-body px-1\">\n        100\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_13296634337792332684_5\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_13296634337792332684\"\n              id=\"radio_13296634337792332684_5\" value=\"5\">\n      </input>\n      <span class=\"label-body px-1\">\n        10000\n      </span>\n    </label>\n</div>\n\n    \n        </div>\n      </div>\n      <div id='13296634337792332684_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_13296634337792332684\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 3;\n    var msgBox = document.getElementById('13296634337792332684_message');\n      if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_13296634337792332684\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_13296634337792332684\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n## Integrate function\n\n\nHere we write a function to do the integration. This needs the basic inputs of\n\n\n  * a function,\n  * the interval's start and end value, and\n  * the number of equal-sized subintervals.\n\n\nIn addition, we allow for the possibility of using different methods to approximate the area over a sub interval. Different possibilities are:\n\n\n  * using a rectangle with the left endpoint to determine the height (`method=\"left\"`)\n  * using a rectangle with the right endpoint to determine the height (`method=\"right\"`)\n  * using a trapezoid formed by joining the left and right endpoints (`method=\"trapezoid\"`)\n  * making the cap a quadratic polynomial that goes through the left and right endpoints and the midpoint (`method=\"simpsons\"`)\n\n\nThis function is defined in `MTH229`:\n\n``` {.julia .cell-code}\nfunction riemann(f::Function, a::Real, b::Real, n::Int; method=\"right\")\n  if method == \"right\"\n     meth = (f,l,r) -> f(r) * (r-l)\n  elseif method == \"left\"\n     meth= (f,l,r) -> f(l) * (r-l)\n  elseif method == \"trapezoid\"\n     meth = (f,l,r) -> (1/2) * (f(l) + f(r)) * (r-l)\n  elseif method == \"simpsons\"\n     meth = (f,l,r) -> (1/6) * (f(l) + 4*(f((l+r)/2)) + f(r)) * (r-l)\n  end\n\n  xs = range(a, b, length=n+1)\n  lrs = zip(Iterators.take(xs, n), Iterators.rest(xs, 1))\n  sum(meth(f, l, r) for (l,r) in lrs)\n\nend\n```\n\n\n### The integrate function in action\n\n\nThe basic usage of the `riemann` function is straightforward. Here we approximate the integral of $e^{-x^2}$ from $0$ to $3$ using $10,000$ subintervals:\n\n::: {.cell execution_count=18}\n``` {.julia .cell-code}\nf(x) =  exp(-x^2)\nriemann(f, 0, 3, 10_000)\n```\n\n::: {.cell-output .cell-output-display execution_count=18}\n```\n0.8860573667654394\n```\n:::\n:::\n\n\nHow big should the number of intervals be? More intervals will give better answers, but unlike Newton's method we have no stopping criteria.  For this problem, we look at various values based on `n`:\n\n::: {.cell execution_count=19}\n``` {.julia .cell-code}\n[riemann(f, 0, 3, n) for n in [100, 1000, 10000, 100000]]   ## or use 10.^(2:5)\n```\n\n::: {.cell-output .cell-output-display execution_count=19}\n```\n4-element Vector{Float64}:\n 0.8712091438971502\n 0.8847075328188878\n 0.8860573667654394\n 0.8861923501105895\n```\n:::\n:::\n\n\nWe see a value around $0.886$ as the answer.\n\n\n### left versus right\n\n\nUsing different methods allows us to compare the right and left Riemann sums. Let's do so for the monotonic function $e^x$ over the interval $[0,2]$.\n\n::: {.cell execution_count=20}\n``` {.julia .cell-code}\nf(x) = exp(x)\nns = [10^i for i in 1:5]\nys = [riemann(f, 0, 2, n, method=\"right\") - riemann(f, 0, 2, n, method=\"left\") for n in ns];\n[ns ys]\n```\n\n::: {.cell-output .cell-output-display execution_count=20}\n```\n5√ó2 Matrix{Float64}:\n     10.0  1.27781\n    100.0  0.127781\n   1000.0  0.0127781\n  10000.0  0.00127781\n 100000.0  0.000127781\n```\n:::\n:::\n\n\nSince these are also the minimum and maximum Riemann sums, the above gives a bound on the error in the approximations. We can see it converges quite slowly, in that there are quite a few computations needed to get even a modest bound. ($100,000$ for $0.00013$).\n\n\n### Practice\n\n\n#### Question\n\n\nCompute the integral of $e^{-x^2}$ over $[0,1]$ using a right Riemann sum with $n=10_000$. What is your answer?\n\n::: {.cell execution_count=21}\n\n::: {.cell-output .cell-output-display execution_count=21}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='5764854527853979942' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_5764854527853979942\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"5764854527853979942\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='5764854527853979942_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"5764854527853979942\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 0.7467925261713516) <= 1.0e-8);\n  var msgBox = document.getElementById('5764854527853979942_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_5764854527853979942\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_5764854527853979942\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nCompute the integral of $(1 + \\cos(x)^2)^{1/2}$ over the interval $[0, \\pi]$ using a right Riemann sum with $n=10,000$. What is your answer?\n\n::: {.cell execution_count=22}\n\n::: {.cell-output .cell-output-display execution_count=22}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='522509099795985389' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_522509099795985389\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"522509099795985389\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='522509099795985389_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"522509099795985389\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 3.82019778902772) <= 1.0e-8);\n  var msgBox = document.getElementById('522509099795985389_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_522509099795985389\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_522509099795985389\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nRepeat the above analysis comparing the right and left Riemann sums for $f(x)=e^x$ over $[0,2]$. However, this time multiply by $n$, as follows:\n\n::: {.cell execution_count=23}\n``` {.julia .cell-code}\nns = [10^i for i in 1:5]\nf(x) = exp(x)\n[n * (riemann(f, 0, 2, n, method=\"right\") - riemann(f, 0, 2, n, method=\"left\")) for n in ns]\n```\n\n::: {.cell-output .cell-output-display execution_count=23}\n```\n5-element Vector{Float64}:\n 12.778112197861304\n 12.778112197861446\n 12.778112197861624\n 12.77811219781988\n 12.778112196087932\n```\n:::\n:::\n\n\nThis shows what?\n\n::: {.cell execution_count=24}\n\n::: {.cell-output .cell-output-display execution_count=24}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='3099984434222886720' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_3099984434222886720\">\n        <div style=\"padding-top: 5px\">\n    <div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_3099984434222886720_1\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_3099984434222886720\"\n              id=\"radio_3099984434222886720_1\" value=\"1\">\n      </input>\n      <span class=\"label-body px-1\">\n        That it is constant says the difference between right and left Riemann sums goes to 0 like 1/n\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_3099984434222886720_2\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_3099984434222886720\"\n              id=\"radio_3099984434222886720_2\" value=\"2\">\n      </input>\n      <span class=\"label-body px-1\">\n        That it is constant says the difference between right and left Riemann sums is constant.\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_3099984434222886720_3\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_3099984434222886720\"\n              id=\"radio_3099984434222886720_3\" value=\"3\">\n      </input>\n      <span class=\"label-body px-1\">\n        That it is constant says the difference between right and left Riemann sums never goes to 0\n      </span>\n    </label>\n</div>\n\n    \n        </div>\n      </div>\n      <div id='3099984434222886720_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_3099984434222886720\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 1;\n    var msgBox = document.getElementById('3099984434222886720_message');\n      if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_3099984434222886720\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_3099984434222886720\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n## Improvements to the rectangle method\n\n\nThe basic left or right Riemann sum will converge, but the convergence is really slow. The value of using rectangles over a grid to approximate area is for theoretical computations, for numeric computations better approximations were known well before Riemann. We mention a few:\n\n\n  * The trapezoid rule and Simpson's rule approximate the area under the curve better, as instead of a rectangle they use a trapezoid (linear fit between two points) or a quadratic fit between the two points.)\n  * Gauss quadrature uses non-evenly selected points within the range and a weighting which is exact for polynomials of a given degree.\n  * Adaptive methods pick a non-uniform set of points to use based on where a function is less well behaved.\n\n\n### Trapezoid and Simpson's rule\n\n\nThe trapezoid rule simply replaces the approximation of the area in a subinterval by a trapezoid, as opposed to a rectangle.\n\n\nWe can use this as follows. Let's approximate the area under the curve $y=5x^4$ between $0$ and $1$ (with known answer $1$):\n\n::: {.cell execution_count=25}\n``` {.julia .cell-code}\nf(x) = 5x^4\nriemann(f, 0, 1, 1000, method=\"trapezoid\")\n```\n\n::: {.cell-output .cell-output-display execution_count=25}\n```\n1.0000016666664995\n```\n:::\n:::\n\n\nPretty close to 1 with just 1,000 subintervals.\n\n\nWe now compare the error with the left Riemann sum for the same size $n$:\n\n::: {.cell execution_count=26}\n``` {.julia .cell-code}\nns = [10^i for i in 1:5]\nleft_r = [riemann(f, 0, 1, n) for n in ns];\ntrapezoid_r = [riemann(f, 0, 1, n, method=\"trapezoid\") for n in ns];\n[ns (1).-left_r (1).-trapezoid_r]\n```\n\n::: {.cell-output .cell-output-display execution_count=26}\n```\n5√ó3 Matrix{Float64}:\n     10.0  -0.26665      -0.01665\n    100.0  -0.0251667    -0.000166665\n   1000.0  -0.00250167   -1.66667e-6\n  10000.0  -0.000250017  -1.66667e-8\n 100000.0  -2.50002e-5   -1.66664e-10\n```\n:::\n:::\n\n\nOne can see that the errors are much smaller for the trapezoid method.\n\n\n### Simpson's rule\n\n\nThe trapezoid rule can be viewed as a simple linear approximation to the function $f(x)$ over the subinterval $[a, b]$. That is, replace the function with the secant line between these two values and integrate the replacement. With this viewpoint, it is possible that other easy-to-integrate function approximations will lead to improved approximate integrals. Simpson's method can be viewed in just this way. It replaces $f$ by the parabola going through $(a, f(a))$, $(c, f( c))$ and $(b, f(b))$ where $c=(a+b)/2$ is the midpoint between $a$ and $b$.\n\n\nWe compare how accurate we get with this rule for the same `f` as before:\n\n::: {.cell execution_count=27}\n``` {.julia .cell-code}\nsimpsons_r = [riemann(f, 0, 1, n, method=\"simpsons\") for n in ns];\n[ns (1).-left_r (1).-trapezoid_r (1).-simpsons_r]\n```\n\n::: {.cell-output .cell-output-display execution_count=27}\n```\n5√ó4 Matrix{Float64}:\n     10.0  -0.26665      -0.01665      -4.16667e-6\n    100.0  -0.0251667    -0.000166665  -4.16667e-10\n   1000.0  -0.00250167   -1.66667e-6   -4.15223e-14\n  10000.0  -0.000250017  -1.66667e-8    1.22125e-15\n 100000.0  -2.50002e-5   -1.66664e-10   1.22125e-15\n```\n:::\n:::\n\n\nAs can be seen, for this function approximating with a parabola is much quicker to converge. That is, $n$ can be smaller yet the same accuracy is maintained. (Of course, there are more computations involved for each, so the number of operations needed may or may not be fewer, that would require some analysis.)\n\n\n### Error\n\n\nIt can be shown that the [error for Simpson's method](http://en.wikipedia.org/wiki/Simpson%27s_rule#Error) is bounded by\n\n\n\n$$\n\\frac{1}{90}\\frac{1}{2^5} M (b-a)^5 \\frac{1}{n^4},\n$$\n\n\nwhere $M$ is a bound on the fourth derivative. As we increase $n$, the error gets small at a quick rate.  By contrast, the error for the trapezoid method will be like $n^{-2}$ and the left Riemann sum like $n^{-1}$.\n\n\n### Practice\n\n\n#### Question\n\n\nThe trapezoid rule has no error for linear functions and Simpson's rule has no error for quadratic functions. Verify the latter by computing the following:\n\n::: {.cell execution_count=28}\n``` {.julia .cell-code}\nf(x) = x^2; F(x) = x^3/3\nriemann(f, 0, 10, 100, method=\"simpsons\") - (F(10) - F(0))\n```\n\n::: {.cell-output .cell-output-display execution_count=28}\n```\n5.684341886080802e-14\n```\n:::\n:::\n\n\nHow accurate is the approximation? Around\n\n::: {.cell execution_count=29}\n\n::: {.cell-output .cell-output-display execution_count=29}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='3544678896352718303' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_3544678896352718303\">\n        <div style=\"padding-top: 5px\">\n    <div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_3544678896352718303_1\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_3544678896352718303\"\n              id=\"radio_3544678896352718303_1\" value=\"1\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>1e-8</code>\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_3544678896352718303_2\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_3544678896352718303\"\n              id=\"radio_3544678896352718303_2\" value=\"2\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>1e-10</code>\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_3544678896352718303_3\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_3544678896352718303\"\n              id=\"radio_3544678896352718303_3\" value=\"3\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>1e-12</code>\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_3544678896352718303_4\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_3544678896352718303\"\n              id=\"radio_3544678896352718303_4\" value=\"4\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>1e-14</code>\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_3544678896352718303_5\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_3544678896352718303\"\n              id=\"radio_3544678896352718303_5\" value=\"5\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>1e-16</code>\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_3544678896352718303_6\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_3544678896352718303\"\n              id=\"radio_3544678896352718303_6\" value=\"6\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>0</code>\n      </span>\n    </label>\n</div>\n\n    \n        </div>\n      </div>\n      <div id='3544678896352718303_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_3544678896352718303\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 4;\n    var msgBox = document.getElementById('3544678896352718303_message');\n      if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_3544678896352718303\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_3544678896352718303\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nCompare the difference between the trapezoid rule and Simpson's rule when integrating $\\cos(x)$ from $0$ to $\\pi/6$. How big is the difference when $n=10,000$?\n\n::: {.cell execution_count=30}\n``` {.julia .cell-code}\na, b, n = 0, pi/6, 10_000\nriemann(cos, a, b, n, method=\"trapezoid\") - riemann(cos, a, b, n, method=\"simpsons\")\n```\n\n::: {.cell-output .cell-output-display execution_count=30}\n```\n-1.1423328949433653e-10\n```\n:::\n:::\n\n\nHow big is the difference?\n\n::: {.cell execution_count=31}\n\n::: {.cell-output .cell-output-display execution_count=31}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='11452915756261054249' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_11452915756261054249\">\n        <div style=\"padding-top: 5px\">\n    <div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_11452915756261054249_1\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_11452915756261054249\"\n              id=\"radio_11452915756261054249_1\" value=\"1\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>1e-8</code>\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_11452915756261054249_2\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_11452915756261054249\"\n              id=\"radio_11452915756261054249_2\" value=\"2\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>1e-10</code>\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_11452915756261054249_3\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_11452915756261054249\"\n              id=\"radio_11452915756261054249_3\" value=\"3\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>1e-12</code>\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_11452915756261054249_4\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_11452915756261054249\"\n              id=\"radio_11452915756261054249_4\" value=\"4\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>1e-14</code>\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_11452915756261054249_5\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_11452915756261054249\"\n              id=\"radio_11452915756261054249_5\" value=\"5\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>1e-16</code>\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_11452915756261054249_6\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_11452915756261054249\"\n              id=\"radio_11452915756261054249_6\" value=\"6\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>0</code>\n      </span>\n    </label>\n</div>\n\n    \n        </div>\n      </div>\n      <div id='11452915756261054249_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_11452915756261054249\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 2;\n    var msgBox = document.getElementById('11452915756261054249_message');\n      if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_11452915756261054249\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_11452915756261054249\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n#### Question ....\n\n\nUsing Simpson's rule and `n=1000` compute the integral of $f(x) = 1/(1+x^2)$ between $0$ and $1$.\n\n::: {.cell execution_count=32}\n\n::: {.cell-output .cell-output-display execution_count=32}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='1901119995586968906' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_1901119995586968906\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"1901119995586968906\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='1901119995586968906_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"1901119995586968906\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 0.7853981633974481) <= 1.0e-5);\n  var msgBox = document.getElementById('1901119995586968906_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_1901119995586968906\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_1901119995586968906\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n## The quadgk function\n\n\n`Julia` provides the `quadgk` function to do adaptive Gauss-Konrod quadrature, a modern, fast and accurate means to compute 1-dimensional integrals numerically. This is in the `QuadGK` package which is loaded with `MTH229`.\n\n\nThe use is straightforward, and similar to `riemann` above: you specify a function object, and the limits of integration. You don't specify $n$ ‚Äì as this is computed adaptively ‚Äì but you can optionally specify a tolerance which controls the accuracy, though we don't do so here. For example, a typical usage might be:\n\n::: {.cell execution_count=33}\n``` {.julia .cell-code}\na, err = quadgk(sin, 0, pi)\t\t## 2 is exact\n```\n\n::: {.cell-output .cell-output-display execution_count=33}\n```\n(2.0, 1.7905676941154525e-12)\n```\n:::\n:::\n\n\nTwo values are returned, the answer and an estimate of the error. In the above, $2$ is the exact answer to this integral, the estimated value a just a bit more $2$, but is estimated to be off my no more than the second value, $1.78 \\cdot 10^{-12}$.\n\n\nIf just the answer is of interest, then it can be extracted using *index notation*:\n\n::: {.cell execution_count=34}\n``` {.julia .cell-code}\nquadgk(sin, 0, pi)[1]\t\t# [1] picks out the first component or two\n```\n\n::: {.cell-output .cell-output-display execution_count=34}\n```\n2.0\n```\n:::\n:::\n\n\n---\n\n\nFor another illustration, since Archimedes the known answer for $\\int_0^1 x^2 dx$ is $1/3$. We see that `quadgk` gets it right for all the digits:\n\n::: {.cell execution_count=35}\n``` {.julia .cell-code}\nquadgk(x -> x^2, 0, 1)\n```\n\n::: {.cell-output .cell-output-display execution_count=35}\n```\n(0.3333333333333333, 5.551115123125783e-17)\n```\n:::\n:::\n\n\nThe `riemann` function is good for pedagogical purposes, but the `quadgk` function should be used instead of the `riemann` function ‚Äì besides being built-in to `julia` it is more accurate, more robust, fast, and less work to use.\n\n\n(That `quadgk` is exact with polynomials is no surprise, as the underlying choice of nodes and weights makes it so for polynomials of certain degree.)\n\n\n\n### Practice\n\n\n#### Question: Use quadgk\n\n\nLet $f(x) = \\exp(-4 \\cdot  |x-1/2|)$. Find the integral over $[0,1]$ using `quadgk`:\n\n::: {.cell execution_count=36}\n\n::: {.cell-output .cell-output-display execution_count=36}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='3269115247430325442' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_3269115247430325442\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"3269115247430325442\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='3269115247430325442_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"3269115247430325442\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 0.4323323583816937) <= 1.0e-5);\n  var msgBox = document.getElementById('3269115247430325442_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_3269115247430325442\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_3269115247430325442\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n#### Question: use quadgk\n\n\nLet $f(x) = \\sin(100\\pi x)/(\\pi x)$. Find the integral over $[0,1]$ using `quadgk`:\n\n::: {.cell execution_count=37}\n\n::: {.cell-output .cell-output-display execution_count=37}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='9889674739150871385' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_9889674739150871385\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"9889674739150871385\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='9889674739150871385_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"9889674739150871385\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 0.49898680869304557) <= 0.0001);\n  var msgBox = document.getElementById('9889674739150871385_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_9889674739150871385\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_9889674739150871385\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nLet $f(x) = \\sin(100\\pi x)/(\\pi x)$. Using $1,000$ points, find the right-Riemann integral over $[0,1]$.\n\n::: {.cell execution_count=38}\n\n::: {.cell-output .cell-output-display execution_count=38}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='7285893079232149914' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_7285893079232149914\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"7285893079232149914\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='7285893079232149914_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"7285893079232149914\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 0.4489951557656148) <= 1.0e-5);\n  var msgBox = document.getElementById('7285893079232149914_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_7285893079232149914\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_7285893079232149914\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n(The answer via Riemann sums isn't even correct to 4 decimal points, due to the highly oscillatory nature of the function.)\n\n\n#### Question\n\n\nHow far off is this Riemann estimate, when $n=100,000$?\n\n``` {.julia .cell-code}\nf(x) = 1/(1 + x^4)\nquadgk(f, 0, 1)[1] - riemann(f, 0, 1, 100_000);\n```\n\n\n::: {.cell execution_count=40}\n\n::: {.cell-output .cell-output-display execution_count=40}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='5928886623017210745' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_5928886623017210745\">\n        <div style=\"padding-top: 5px\">\n    <div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_5928886623017210745_1\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_5928886623017210745\"\n              id=\"radio_5928886623017210745_1\" value=\"1\">\n      </input>\n      <span class=\"label-body px-1\">\n        Roughly <code>1e-4</code>\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_5928886623017210745_2\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_5928886623017210745\"\n              id=\"radio_5928886623017210745_2\" value=\"2\">\n      </input>\n      <span class=\"label-body px-1\">\n        Roughly <code>1e-12</code>\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_5928886623017210745_3\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_5928886623017210745\"\n              id=\"radio_5928886623017210745_3\" value=\"3\">\n      </input>\n      <span class=\"label-body px-1\">\n        Roughly <code>1e-6</code>\n      </span>\n    </label>\n</div>\n\n    \n        </div>\n      </div>\n      <div id='5928886623017210745_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_5928886623017210745\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 3;\n    var msgBox = document.getElementById('5928886623017210745_message');\n      if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_5928886623017210745\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_5928886623017210745\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nThe `quadgk` function allows you to specify issues where there are troubles. For example, we know that $f(x) = \\sin(x)/x$ has an issue at 0. Directly trying this integral `quadgk(x->sin(x)/x, -pi, pi)` will fail, but you can specify the issue at $0$ as follows `quadgk(x -> sin(x)/x, -pi, 0, pi)`. Do so. What is the value of the result:\n\n::: {.cell execution_count=41}\n\n::: {.cell-output .cell-output-display execution_count=41}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='7064709747591377407' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_7064709747591377407\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"7064709747591377407\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='7064709747591377407_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"7064709747591377407\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 3.703874103964933) <= 0.0001);\n  var msgBox = document.getElementById('7064709747591377407_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_7064709747591377407\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_7064709747591377407\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nLet $f(x) = |x - 0.3|^{-1/4}$. We wish to find $\\int_0^1 f(x) dx$. The problem with this function is the singularity at $x=0.3$. (That is, the function is not continuous, so has no guarantee that an integral over a closed domain exists.) However, some such integrals do exist, and the `quadgk` function can integrate around such singularities by spelling them out in the domain of integration. Just specify the trouble spots between the endpoints:\n\n``` {.julia .cell-code}\nf(x) = abs(x - 0.3)^(-1/4)\nval = quadgk(f, 0, 0.3, 1);\n```\n\n\nFollowing the above, what answer do you get?\n\n::: {.cell execution_count=43}\n\n::: {.cell-output .cell-output-display execution_count=43}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='6080266904366960825' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_6080266904366960825\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"6080266904366960825\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='6080266904366960825_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"6080266904366960825\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 1.5608608290003951) <= 0.0001);\n  var msgBox = document.getElementById('6080266904366960825_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_6080266904366960825\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_6080266904366960825\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n## Applications\n\n\nThere are many more applications of the integral beyond computing areas under the curve. Here we discuss two:\n\n\n  * finding the volume of a figure with rotational symmetry (a glass in our example) and\n  * finding the arc length of a line.\n\n\nIn each case one integrates a function related to the one describing the problem. If you keep this straight, the applications are no different than above.\n\n\n### Volume as a function of radius.\n\n\nThe volume of a solid of revolution about the $y$-axis is illustrated [here](https://www.khanacademy.org/math/integral-calculus/solid_revolution_topic/disc-method/v/disc-method-around-y-axis).\n\n\nThis figure shows a volume of revolution (a glass) with an emphasis on the radius of the solid. The volume can be determined if the radius is known.\n\n\n![Glass](figures/integration/integration-glass.jpg)\n\n\nThe basic formula requires the description of the radius as a function of $x$ (if oriented as the figure) or the height, $h$, (if oriented as in real life). Suppose we specify the radius with $r(h)$, then the following formula holds with $b$ the total height.\n\n\n\n$$\nV(b) = \\int_0^b \\pi r(h)^2 dh.\n$$\n\n\nFor a symmetrical drinking vessel, like most every glass you drink from, the volume can be computed from a formula if a function describing the radius is known. For a given glass, let $r(h)$ give the radius as a function of height. Then, as above, the volume of the vessel as a function of height, $b$, is given by an integral:\n\n\n\n$$\nV(b) = \\int_0^b \\pi (r(h))^2 dh\n$$\n\n\nWe wish to look at our intuition relating the height of the fluid in the vessel compared to the percentage of fluid of the whole. A basic question might be: If the vessel is filled half way by height, is the volume half of the total, more or less?\n\n\nThe answer, of course, depends on the shape of the glass.  That is the shape of the function $r(h)$. Note, if $r(h)$ is a constant ‚Äì the glass is a cylinder ‚Äì then the half-height mark is also the half-volume mark. Not so in general.\n\n\nFor a standard measuring cup, the answer for different `b`'s is printed on the side:\n\n\n![Measuring cup](figures/integration/measuring_cup.png)\n\n\nWith the formula for the volume of a solid of revolution we can compute this marks numerically if we know the radius as a function of height.\n\n\nIn Glass Shape Influences Consumption Rate for [Alcoholic Beverages](http://www.plosone.org/article/info%3Adoi%2F10.1371%2Fjournal.pone.0043007) the authors demonstrate that the shape of the glass can have an effect on the rate of consumption, presumably people drink faster when they aren't sure how much they have left. In particular, they comment that people have difficulty judging the half-finished-by-volume mark.\n\n\nThis figure shows some of the wide variety of beer-serving glasses:\n\n\n[Beer glasses](figures/integration/beer_glasses.jpg)\n\n\nWe work with metric units, as there is a natural relation between volume in cm$^3$ and liquid measure (1 liter = 1000 cm$^3$, so a 16-oz pint glass is roughly $450$ cm$^3$.)\n\n\nLet two glasses be given as follows. A typical pint glass with linearly increasing radius:\n\n\n\n$$\nr(h) = 3 + \\frac{1}{5}h, \\quad 0 \\leq h \\leq b;\n$$\n\n\nand a curved edge one:\n\n\n\n$$\ns(h) = 3 + \\log(1 + h), \\quad 0 \\leq h \\leq b\n$$\n\n\n[Half full](figures/integration/glass-half-full.png)\n\n\nOne could also consider a fluted one, such as appears in the comparison noted in the article.\n\n\n#### Question\n\n\nWhich of these functions might describe a fluted glass where the radius changes faster as the height gets bigger, that is the radius is a *concave up* function?\n\n::: {.cell execution_count=44}\n\n::: {.cell-output .cell-output-display execution_count=44}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='11716021319789135952' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_11716021319789135952\">\n        <div style=\"padding-top: 5px\">\n    <div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_11716021319789135952_1\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_11716021319789135952\"\n              id=\"radio_11716021319789135952_1\" value=\"1\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>r&#40;h&#41; &#61; 2 &#43; &#40;h/10&#41;^2, 0 &lt;&#61; h &lt;&#61; 10</code>\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_11716021319789135952_2\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_11716021319789135952\"\n              id=\"radio_11716021319789135952_2\" value=\"2\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>r&#40;h&#41; &#61; 2 &#43; sqrt&#40;h/10&#41;, 0 &lt;&#61; h &lt;&#61; 10</code>\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_11716021319789135952_3\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_11716021319789135952\"\n              id=\"radio_11716021319789135952_3\" value=\"3\">\n      </input>\n      <span class=\"label-body px-1\">\n        <code>r&#40;h&#41; &#61; 2 &#43; h/10, 0 &lt;&#61; h &lt;&#61; 10</code>\n      </span>\n    </label>\n</div>\n\n    \n        </div>\n      </div>\n      <div id='11716021319789135952_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_11716021319789135952\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 1;\n    var msgBox = document.getElementById('11716021319789135952_message');\n      if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_11716021319789135952\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_11716021319789135952\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n---\n\nFor the two types of glasses in the figure, we create functions in `julia` as follows:\n\n::: {.cell execution_count=45}\n``` {.julia .cell-code}\nr(h) = 3 + h/5\ns(h) = 3 + log(1 + h)\nr_vol(b) = quadgk(x -> pi*r(x)^2, 0, b)[1]\ns_vol(b) = quadgk(x -> pi*s(x)^2, 0, b)[1]\n```\n\n::: {.cell-output .cell-output-display execution_count=45}\n```\ns_vol (generic function with 1 method)\n```\n:::\n:::\n\n\nThen we can easily find the volume as a function of height. For example at 10cm we have:\n\n::: {.cell execution_count=46}\n``` {.julia .cell-code}\n(r_vol(10), s_vol(10))\n```\n\n::: {.cell-output .cell-output-display execution_count=46}\n```\n(513.1268000863329, 687.2432199897678)\n```\n:::\n:::\n\n\nHowever, to find $b$ that makes the glass $450$ cm$^3$ requires us to solve an equation involving an integral for $b$:\n\n\n\n$$\nV(b) = \\int_0^b \\pi r(h)^2 dh = 450.\n$$\n\n\nNot to worry, we can use `find_zero` from the `Roots` package for that (again, this is loaded with the `MTH229` package). To solve for when `V(b) = r_vol(b) - 450 = 0` we have\n\n::: {.cell execution_count=47}\n``` {.julia .cell-code}\nr_b = find_zero(x -> r_vol(x) - 450,  10)\n```\n\n::: {.cell-output .cell-output-display execution_count=47}\n```\n9.168923214523724\n```\n:::\n:::\n\n\nSo $b$ is basically $9.17$.  Given this, how much volume is left at `b/2`?\n\n::: {.cell execution_count=48}\n``` {.julia .cell-code}\nr_vol(r_b/2)\n```\n\n::: {.cell-output .cell-output-display execution_count=48}\n```\n173.27527610482954\n```\n:::\n:::\n\n\nWhich is what percent of the whole?\n\n::: {.cell execution_count=49}\n``` {.julia .cell-code}\nr_vol(r_b/2) / r_vol(r_b) * 100\n```\n\n::: {.cell-output .cell-output-display execution_count=49}\n```\n38.50561691218434\n```\n:::\n:::\n\n\nAs this height is often mistaken for the half-way by volume mark, people tend to drink these pints faster than they think.\n\n\nNow compare to the height to get half the volume (225 ml):\n\n::: {.cell execution_count=50}\n``` {.julia .cell-code}\nr_half = find_zero(x -> r_vol(x) - 225,  5)\n```\n\n::: {.cell-output .cell-output-display execution_count=50}\n```\n5.603662378152273\n```\n:::\n:::\n\n\nThis value is more than half of $b$:\n\n::: {.cell execution_count=51}\n``` {.julia .cell-code}\nr_half / r_b\n```\n\n::: {.cell-output .cell-output-display execution_count=51}\n```\n0.6111581749616989\n```\n:::\n:::\n\n\nAt this height only half the volume is remaining (and not at 50% of the original height.)\n\n\n### Practice\n\n\n#### Question\n\n\nCompare the above for the curved glass, where $s(h) = 3 + \\log(1 + h)$.\n\n\nWhat is the height of the glass, `b`, needed to make the volume 450?\n\n::: {.cell execution_count=52}\n\n::: {.cell-output .cell-output-display execution_count=52}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='6357595365099476547' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_6357595365099476547\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"6357595365099476547\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='6357595365099476547_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"6357595365099476547\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 7.273543523711023) <= 0.001);\n  var msgBox = document.getElementById('6357595365099476547_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_6357595365099476547\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_6357595365099476547\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nFind the volume of the glass represented by $s(h) = 3 + \\log(1 + h), 0 \\leq h \\leq b$ when the glass is filled to half its height. Report the value as a percentage of the total volume.\n\n::: {.cell execution_count=53}\n\n::: {.cell-output .cell-output-display execution_count=53}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='1624753513923761762' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_1624753513923761762\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"1624753513923761762\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='1624753513923761762_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"1624753513923761762\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 40.17520354006269) <= 1);\n  var msgBox = document.getElementById('1624753513923761762_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_1624753513923761762\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_1624753513923761762\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nNow how high do you fill the glass to produce *half* the volume?\nReport your answer in terms of a percentage of $b$, the height of the glass.\n\n::: {.cell execution_count=54}\n\n::: {.cell-output .cell-output-display execution_count=54}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='11962001753646490350' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_11962001753646490350\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"11962001753646490350\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='11962001753646490350_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"11962001753646490350\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 59.13334210350367) <= 0.1);\n  var msgBox = document.getElementById('11962001753646490350_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_11962001753646490350\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_11962001753646490350\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n#### Question\n\n\nConsider this big Solo cup:\n\n\n![Solo cup](figures/integration/big-solo-cup.jpg)\n\n\nIt has approximate dimensions: smaller radius 5 feet, upper radius 8 feet and height 15 feet. How many gallons is it? At $8$ pounds a gallon this would be pretty heavy!\n\n\nTwo facts are useful:\n\n\n  * a cubic foot is 7.48052 gallons\n  * the radius as a function of height is $r(h) = 5  + (3/15)\\cdot h$\n\n::: {.cell execution_count=55}\n\n::: {.cell-output .cell-output-display execution_count=55}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='11138910423092925760' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_11138910423092925760\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"11138910423092925760\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='11138910423092925760_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"11138910423092925760\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 15157.98160668533) <= 10.0);\n  var msgBox = document.getElementById('11138910423092925760_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_11138910423092925760\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_11138910423092925760\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n## Example, arc length\n\n\nThe basic indefinite integral for a positive function answers the amount of area under the curve over a given interval. However, the integral can be interpreted in many different ways. For example, one can use an integral to answer how long a curve is. Of course one can estimate this answer. For example, consider this curve:\n\n::: {.cell execution_count=56}\n``` {.julia .cell-code}\nplot(x -> x^2, 0, 1)\n```\n\n::: {.cell-output .cell-output-display execution_count=56}\n![](integration_files/figure-html/cell-57-output-1.svg){}\n:::\n:::\n\n\nThis curve has length no more than $2 = 1 + 1$ ‚Äì the distance along the $x$ axis starting at $0$ to $1$ and then going up. It is also longer than $\\sqrt{2} = \\sqrt{1^2 + 1^2}$ ‚Äì the straight line distance between the two endpoints. But how long is it?\n\n\nIn general, the *arc length* of the curve $y=f(x)$ between $a \\leq x \\leq b$ (or how long is the curve) is given through the formula\n\n\n\n$$\nl = \\int_a^b \\sqrt{1 + f'(x)^2} dx\n$$\n\n\nThe formula is from the length of the hypotenuse of a right triangle with lengths $1$ and $f'(x)$, This image suggests an approximation for the length and why the hypotenuse of some triangle might be involved.\n\n\n[Arc length](figures/integration/arclength.gif)\n\n\nRather than focus on a derivation, we do some examples illustrating that to compute the arclength of the graph of a function is relatively straightforward  using numeric integration. For example, our answer for $f(x) = x^2$ is given by\n\n::: {.cell execution_count=57}\n``` {.julia .cell-code}\nf(x) = x^2\nquadgk(x -> sqrt(1 + f'(x)^2), 0, 1)      # using f' notation defined in MTH229\n```\n\n::: {.cell-output .cell-output-display execution_count=57}\n```\n(1.4789428575446002, 1.0424396901242972e-8)\n```\n:::\n:::\n\n\n(We use an *anonymous function* for the integrand which involved the derivative being found through `f'`. If the graph is described by `f`, then this expression be the same for all these problems.)\n\n---\n\n\nWhereas, the length of the $f(x) = \\sin(x)$ over $[0, \\pi]$ would be:\n\n::: {.cell execution_count=58}\n``` {.julia .cell-code}\nf(x) = sin(x)\nquadgk(x -> sqrt(1 + f'(x)^2), 0, pi)\n```\n\n::: {.cell-output .cell-output-display execution_count=58}\n```\n(3.820197789027713, 9.377002729848982e-9)\n```\n:::\n:::\n\n\nNext we look at a more practical problem.\n\n\n### Example: the catenary shape\n\n\nA [catenary shape](http://en.wikipedia.org/wiki/Catenary) is the shape a hanging chain will take as it is suspended between two posts. It appears elsewhere, for example, power wires will also have this shape as they are suspended between towers. A formula for a catenary can be written in terms of the hyperbolic cosine, `cosh` in `julia` or exponentials.\n\n\n\n$$\ny = a \\cosh(x/a) = a \\cdot \\frac{e^{x/a} + e^{-x/a}}{2}.\n$$\n\n\nSuppose we have the following wire hung between $x=-1$ and $x=1$ with $a = 2$:\n\n::: {.cell execution_count=59}\n``` {.julia .cell-code}\nf(x; a=2) = a * cosh(x/a)\nplot(f, -1, 1)\n```\n\n::: {.cell-output .cell-output-display execution_count=59}\n![](integration_files/figure-html/cell-60-output-1.svg){}\n:::\n:::\n\n\nHow long is the chain? Looking at the graph we can guess an answer is between $2$ and $2.5$, say, but it isn't much work to get the answer:\n\n::: {.cell execution_count=60}\n``` {.julia .cell-code}\nquadgk(x -> sqrt(1 + f'(x)^2), -1, 1)\n```\n\n::: {.cell-output .cell-output-display execution_count=60}\n```\n(2.0843812219749895, 0.0)\n```\n:::\n:::\n\n\n### Practice\n\n\n#### Question\n\n\nThe sag in the chain is adjusted through the parameter $a$ ‚Äì chains with larger $a$ have less sag.\n\n\nSuppose your chain has parameter `a=3` what is the length? (Use `quadgk`)\n\n::: {.cell execution_count=61}\n\n::: {.cell-output .cell-output-display execution_count=61}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='463671899142259106' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_463671899142259106\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"463671899142259106\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='463671899142259106_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"463671899142259106\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 2.037243343536901) <= 0.001);\n  var msgBox = document.getElementById('463671899142259106_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_463671899142259106\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_463671899142259106\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n#### Question: in the artist studio\n\n\nThis picture of Jasper Johns [Near the Lagoon](http://www.artic.edu/aic/collections/artwork/184095) was taken at The Art Institute Chicago.\n\n\n[Jasper Johns](figures/integration/johns-catenary.jpg)\n\n\nThe museum notes have\n\n\n> For his Catenary series (1997‚Äì2003), of which Near the Lagoon is    the largest and last work, Johns formed catenaries‚Äîa term used to    describe the curve assumed by a cord suspended freely from two    points‚Äîby tacking ordinary household string to the canvas or its    supports.\n\n\n\nThis particular catenary has a certain length. The basic dimensions are 78in wide and 118in drop. If our shifted function is\n\n\n\n$$\nf(x; a, b) = a \\cosh(x/a) - b\n$$\n\n\nThen we have $f(0) = -118$ and $f(78/2) = 0$ using the origin midway between the two tops of the curve. Solving the first gives\n\n\n\n$$\n-118 = a - b \\text{ or } b = a + 118.\n$$\n\n\nThe second gives $a \\cdot \\cosh(78/(2a)) - (a + 118) = 0$. This can be solved numerically for a:\n\n::: {.cell execution_count=62}\n``` {.julia .cell-code}\ncatenary(x; a=1, b=0) = a*cosh(x/a) - b\na = newton(a -> catenary(78/2, a=a, b=118 + a), 1)\n```\n\n::: {.cell-output .cell-output-display execution_count=62}\n```\n12.994268574805396\n```\n:::\n:::\n\n\nRounding, we take $a=13$. With these parameters ($a=13$, $b = 131$), compute the length of John's catenary.\n\n::: {.cell execution_count=63}\n\n::: {.cell-output .cell-output-display execution_count=63}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='11241478897473953979' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_11241478897473953979\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"11241478897473953979\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='11241478897473953979_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"11241478897473953979\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 260.46474811265745) <= 1);\n  var msgBox = document.getElementById('11241478897473953979_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_11241478897473953979\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_11241478897473953979\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n#### Question: bridges are parabolas\n\n\nSuspension bridges, like the Verrazano bridge, have different loading than a cable and hence a different shape. A parabola is the shape the cable takes under uniform loading.\n\n\nThe Verrazano-Narrows [bridge](http://observer.com/2012/09/staten-island/s-i-8/) has a span of 1298m. Suppose the drop of the main cables is 147 meters over this span. Then the cable itself can be modeled as a parabola with\n\n\n  * $x$-intercepts $a = 1298/2$ and $-a$ and\n  * vertex $(0,b)$ with $b=-147$.\n\n\nThe parabola that fits these three points is\n\n\n\n$$\ny = \\frac{-b}{a^2}(x^2 - a^2)\n$$\n\n\nFind the arc length of the cable in meters.\n\n::: {.cell execution_count=64}\n\n::: {.cell-output .cell-output-display execution_count=64}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='347299050463138313' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_347299050463138313\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"347299050463138313\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='347299050463138313_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"347299050463138313\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 1341.1191077638794) <= 0.001);\n  var msgBox = document.getElementById('347299050463138313_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_347299050463138313\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_347299050463138313\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\nIn the picture of the Verrazano-Narrows [bridge](http://observer.com/2012/09/staten-island/s-i-8/), would the shape during construction be a parabola or a catenary?\n\n::: {.cell execution_count=65}\n\n::: {.cell-output .cell-output-display execution_count=65}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='13136751176693129793' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_13136751176693129793\">\n        <div style=\"padding-top: 5px\">\n    <div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_13136751176693129793_1\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_13136751176693129793\"\n              id=\"radio_13136751176693129793_1\" value=\"1\">\n      </input>\n      <span class=\"label-body px-1\">\n        A parabola, as just mentioned\n      </span>\n    </label>\n</div>\n<div class=\"form-check\">\n    <label class=\"form-check-label\" for=\"radio_13136751176693129793_2\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"radio_13136751176693129793\"\n              id=\"radio_13136751176693129793_2\" value=\"2\">\n      </input>\n      <span class=\"label-body px-1\">\n        A catenary, basically, as in the picture there is basically no load on the cables.\n      </span>\n    </label>\n</div>\n\n    \n        </div>\n      </div>\n      <div id='13136751176693129793_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.querySelectorAll('input[name=\"radio_13136751176693129793\"]').forEach(function(rb) {\nrb.addEventListener(\"change\", function() {\n    var correct = rb.value == 2;\n    var msgBox = document.getElementById('13136751176693129793_message');\n      if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_13136751176693129793\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_13136751176693129793\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n})});\n\n</script>\n```\n:::\n:::\n\n\n#### Question: the tractrix\n\n\nA boat sits at the point $(a, 0)$ and a man holds a rope taut attached to the boat at the origin $(0,0)$. The man walks on the $y$ axis. The position $y$ depends then on the position $x$ of the boat, and if the rope is taut, the position satisfies:\n\n\n\n$$\ny = a \\ln\\frac{a + \\sqrt{a^2 - x^2}}{x} - \\sqrt{a^2 - x^2}\n$$\n\n\nThis can be entered into `julia` as:\n\n::: {.cell execution_count=66}\n``` {.julia .cell-code}\ng(x, a) = a * log((a + sqrt(a^2 - x^2))/x) - sqrt(a^2 - x^2)\n```\n\n::: {.cell-output .cell-output-display execution_count=66}\n```\ng (generic function with 1 method)\n```\n:::\n:::\n\n\nLet $a=12$, $f(x) = g(x, a)$. Compute the length the bow of the boat has traveled between $x=1$ and $x=a$ using `quadgk`.\n\n::: {.cell execution_count=67}\n\n::: {.cell-output .cell-output-display execution_count=67}\n```{=html}\n<form class=\"mx-2 my-3 mw-100\" name='WeaveQuestion' data-id='6361644174410365296' data-controltype=''>\n  <div class='form-group '>\n    <div class='controls'>\n      <div class=\"form\" id=\"controls_6361644174410365296\">\n        <div style=\"padding-top: 5px\">\n    </br>\n<div class=\"input-group\">\n    <input id=\"6361644174410365296\" type=\"number\" class=\"form-control\" placeholder=\"Numeric answer\">\n</div>\n\n    \n        </div>\n      </div>\n      <div id='6361644174410365296_message' style=\"padding-bottom: 15px\"></div>\n    </div>\n  </div>\n</form>\n\n<script text='text/javascript'>\ndocument.getElementById(\"6361644174410365296\").addEventListener(\"change\", function() {\n  var correct = (Math.abs(this.value - 29.818879797456006) <= 0.001);\n  var msgBox = document.getElementById('6361644174410365296_message');\n    if(correct) {\n    msgBox.innerHTML = \"<div class='pluto-output admonition note alert alert-success'><span> üëç&nbsp; Correct </span></div>\";\n    var explanation = document.getElementById(\"explanation_6361644174410365296\")\n    if (explanation != null) {\n       explanation.style.display = \"none\";\n    }\n  } else {\n    msgBox.innerHTML = \"<div class='pluto-output admonition alert alert-danger'><span>üëé&nbsp; Incorrect </span></div>\";\n    var explanation = document.getElementById(\"explanation_6361644174410365296\")\n    if (explanation != null) {\n       explanation.style.display = \"block\";\n    }\n  }\n\n});\n\n</script>\n```\n:::\n:::\n\n\n(The most elementary description of this curve is in terms of the relationship $dy/dx = -\\sqrt{a^2-x^2}/x$ which could be used in place of `f'` in your work.)\n\n\n:::{.callout-note}\n## More on the tractrix\nWatch this [video](https://simonsfoundation.org/multimedia/mathematical-impressions-bicycle-tracks/\">\"bicycle tracks) to see an example of how the tractrix can be found in an everyday observation. Also [here](http://calteches.library.caltech.edu/4007/1/Calculus.pdf).\n\n:::\n\n## Gauss quadrature, Using weights\n\n\nWhat components go into the `quadgk` function? This section covers some of the background.\n\n\nThe trapezoid rule can be rearranged to become:\n\n\n\n$$\n\\delta f(x_0) + 2\\delta f(x_2) + 2 \\delta f(x_3) + \\cdots + 2 \\delta f(x_{n}) + \\delta f(x_{n})\n$$\n\n\nwhere $\\delta = (b-a)/n$.\n\n\nWhereas for even $n$, Simpson's rule can be written with:\n\n\n\n$$\n\\delta f(x_0) + 4\\delta f(x_1) + 2 \\delta f(x_2) + \\cdots +  4 \\delta f(x_{n-2}) + 2 \\delta f(x_{n-1}) + \\delta f(x_{n})\n$$\n\n\nwith $\\delta = (b-a)/n \\cdot (1/6)$.\n\n\nThese both have the general form of\n\n\n\n$$\n\\sum_k w_k \\cdot f(x_k)\n$$\n\n\nwhere $w_k$ are weights and the $x_k$ some choice of points (nodes) ‚Äì not necessarily evenly spaced, though that is so in the examples we've seen. So, an alternative way to do the trapezoid formula in `julia` for $n=4$ might be:\n\n::: {.cell execution_count=68}\n``` {.julia .cell-code}\na, b, n = 0, 1, 4\ndelta = (b-a)/n\nf(x) = x^2\nwts = [1, 2, 2, 2, 1] * delta ## delta * [1, repeat([2],n-1), 1]'\nxs = a .+ (0:n) * delta\nsum(w * f(x) for (w,x) in zip(wts, xs))\n```\n\n::: {.cell-output .cell-output-display execution_count=68}\n```\n0.6875\n```\n:::\n:::\n\n\nThe compact code of the last line to compute the approximate integral shows there are three important things in this form of the integral: the weights, the *nodes* or $x$ values, and the function. The use of equally spaced nodes has been used by us so far, but it need not be the case. If fact Gauss showed he could get similar answers faster if it wasn't the case.\n\n\nThe Gauss nodes and weights are computable (http://en.wikipedia.org/wiki/Gaussian_quadrature). The main tools are the so-called Legendre polynomials, which can be defined recursively with Bonnet's formula:\n\n\n\n$$\nP_0(x) = 1; P_1(x) = x; \\quad  n P_{n}(x)  = (2(n-1)+1) x P_{n-1}(x) -(n-1) P_{n-2}(x).\n$$\n\n\nUsing `julia`'s `Polynomials` package this can be implemented almost verbatim:\n\n::: {.cell execution_count=69}\n``` {.julia .cell-code}\nimport Polynomials\nimport Polynomials: Polynomial\nfunction lgp(n::Integer)\n    if n == 0 return Polynomial([1]) end\n    if n == 1 return Polynomial([0, 1]) end\n\n    (2*(n-1) + 1) / n * lgp(1) * lgp(n-1) - (n-1)/n * lgp(n-2)\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=69}\n```\nlgp (generic function with 1 method)\n```\n:::\n:::\n\n\nThis is used as,\n\n::: {.cell execution_count=70}\n``` {.julia .cell-code}\np4 = lgp(4)\n```\n\n::: {.cell-output .cell-output-display execution_count=70}\n```{=html}\n0.375 &#45; 3.75&#8729;x<sup>2</sup> &#43; 4.375&#8729;x<sup>4</sup>\n```\n:::\n:::\n\n\nThe term *recursion* is applied to a function when it makes a reference to itself during a computation. With this function, don't try it with values much bigger than $20$, as the recursion can take a long time.\n\n\nThe nodes are the roots of the right polynomial. Here we have the values for `p4`\n\n::: {.cell execution_count=71}\n``` {.julia .cell-code}\nxs = Polynomials.roots(p4)\n```\n\n::: {.cell-output .cell-output-display execution_count=71}\n```\n4-element Vector{Float64}:\n -0.8611363115940536\n -0.33998104358485653\n  0.3399810435848563\n  0.8611363115940531\n```\n:::\n:::\n\n\n(The Konrod part of `quadgk` changes the nodes so they can be reused during the refinement.)\n\n\nFinally, the weights  involve the derivative of $P_n$ through:\n\n\n\n$$\nw_i = \\frac{2}{(1 - x_i^2) \\cdot(P^{'}_n(x_i)/P_n(1))^2}\n$$\n\n\nThese can be done simply with:\n\n::: {.cell execution_count=72}\n``` {.julia .cell-code}\nweights(x) = 2 / ((1 - x^2) * (Polynomials.derivative(p4)(x)/p4(1))^2 )\nws = [weights(xi) for xi in xs]\n```\n\n::: {.cell-output .cell-output-display execution_count=72}\n```\n4-element Vector{Float64}:\n 0.3478548451374517\n 0.6521451548625461\n 0.6521451548625463\n 0.3478548451374526\n```\n:::\n:::\n\n\nFrom here `gauss_quadrature` will do the integration of `f` over the interval $[-1,1]$, though we can do it ourself quickly enough. Here we compute the integral of $\\cos(\\pi/2 x)$ over $[-1,1]$ (you can check this is very close to the answer $4/\\pi$ even with just 4 nodes):\n\n\n```\nf(x) = cos(pi/2*x)\nsum(w * f(x) for (w,x) in zip(ws, xs))\n```\n\n### Adaptive integration\n\n\nNext, we a have a brief discussion about an alternative means to compute integrals. The following function `adapt` implements a basic *adaptive quadrature* method for integration. The basic idea is that for a subinterval $[a,b]$ if the area of the trapezoid is not close to the area of Simpson's parabolic estimate then the subinterval is split into two pieces $[a,c]$ and $[c,b]$ and the same question is asked. If the area is close the Simpson's parabolic estimate is used to estimate the integral of $f$ over that subinterval.\n\n\nAgain, we see *recursion* when  programming this algorithm.  To avoid infinite loops during this, we use a limit below to keep track.\n\n\nIn general, the value of adaptive methods like this, is the function calls concentrate on areas where $f$ is not well approximated and where it is well approximated it just moves on. This approach works well for poorly behaved functions, as it has a more refined grid there.\n\n\n\n::: {.cell execution_count=74}\n``` {.julia .cell-code}\nfunction adapt(f, a, b, limit)\n\n    h = b-a\n    c = a + (b - a)/2\n\n    a1 = (f(a) + f(b)) * h/2          ## trapezoid\n    a2 = (f(a) + 4f(c) + f(b)) * h/6  ## Simpson's parabola\n\n    if isapprox(a1, a2)\n        return(a2)\n    end\n\n    if limit == 0\n        println(\"limit reached for this interval [$a, $b]\")\n\treturn(a2)\n    end\n\n    adapt(f, a, c, limit - 1) + adapt(f, c, b, limit-1)\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=74}\n```\nadapt (generic function with 1 method)\n```\n:::\n:::\n\n\nDoes it work? Let's see it for the area of $f(x) = x^2(1-x)^{10}$ which is known to satisfy $\\beta(2+1, 10+1)$\n\n\n```\nout = adapt(x -> x^2 * (1 -x)^10, 0, 1, 10)\n```\n\nNot too far off  (`1e-10`) from the known answer which is a beta function:\n\n\n```\nout - beta(2 + 1, 10 + 1)\n```\n\n(The use of `isapprox` above determines how accurate the values will be. This function uses two tolerances to test if the valus `x` and `y` are approximately the same. These could be changed easily enough so that more precise answers can be found.)\n\n",
    "supporting": [
      "integration_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}